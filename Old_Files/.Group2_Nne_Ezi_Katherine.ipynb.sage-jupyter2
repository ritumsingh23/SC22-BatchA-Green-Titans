{"backend_state":"init","connection_file":"/projects/d061bad1-2739-44d6-bf33-6fa5871e6830/.local/share/jupyter/runtime/kernel-3b3fef59-3bda-4c2b-aed5-94a2e3f75f50.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"578b6f","input":"","pos":19,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"622ad5","input":"","pos":0,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"ab05b0","input":"costofliving1_.drop('index', axis=2)","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"eded2e","input":"","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f5848d","input":"","pos":20,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"97af7c","input":"import numpy as np\nimport pandas as pd","pos":4,"type":"cell"}
{"cell_type":"code","exec_count":108,"id":"2a55bc","input":"costofliving1_ = costofliving1.transpose()","pos":13,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"816b4d","input":"costofliving1 = pd.read_csv('cost-of-living.csv')\ncostofliving2 = pd.read_csv('costofliving.csv')","pos":5,"type":"cell"}
{"cell_type":"code","exec_count":134,"id":"3d597b","input":"\ncostofliving1_.head()","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>level_0</th>\n      <th>index</th>\n      <th>City</th>\n      <th>City</th>\n      <th>City</th>\n      <th>new column name</th>\n      <th>new column name</th>\n      <th>0</th>\n      <th>1</th>\n      <th>2</th>\n      <th>...</th>\n      <th>45</th>\n      <th>46</th>\n      <th>47</th>\n      <th>48</th>\n      <th>49</th>\n      <th>50</th>\n      <th>51</th>\n      <th>52</th>\n      <th>53</th>\n      <th>54</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>Unnamed: 0</td>\n      <td>Meal, Inexpensive Restaurant</td>\n      <td>Meal for 2 People, Mid-range Restaurant, Three...</td>\n      <td>McMeal at McDonalds (or Equivalent Combo Meal)</td>\n      <td>...</td>\n      <td>Lettuce (1 head)</td>\n      <td>Cappuccino (regular)</td>\n      <td>Rice (white), (1kg)</td>\n      <td>Tomato (1kg)</td>\n      <td>Banana (1kg)</td>\n      <td>Onion (1kg)</td>\n      <td>Beef Round (1kg) (or Equivalent Back Leg Red M...</td>\n      <td>Toyota Corolla 1.6l 97kW Comfort (Or Equivalen...</td>\n      <td>Preschool (or Kindergarten), Full Day, Private...</td>\n      <td>International Primary School, Yearly for 1 Child</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>1</td>\n      <td>Saint Petersburg, Russia</td>\n      <td>7.34</td>\n      <td>29.35</td>\n      <td>4.4</td>\n      <td>...</td>\n      <td>0.86</td>\n      <td>1.96</td>\n      <td>0.92</td>\n      <td>1.91</td>\n      <td>0.89</td>\n      <td>0.48</td>\n      <td>7.18</td>\n      <td>19305.29</td>\n      <td>411.83</td>\n      <td>5388.86</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>2</td>\n      <td>Istanbul, Turkey</td>\n      <td>4.58</td>\n      <td>15.28</td>\n      <td>3.82</td>\n      <td>...</td>\n      <td>0.61</td>\n      <td>1.84</td>\n      <td>1.3</td>\n      <td>0.8</td>\n      <td>1.91</td>\n      <td>0.62</td>\n      <td>9.73</td>\n      <td>20874.72</td>\n      <td>282.94</td>\n      <td>6905.43</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>3</td>\n      <td>Izmir, Turkey</td>\n      <td>3.06</td>\n      <td>12.22</td>\n      <td>3.06</td>\n      <td>...</td>\n      <td>0.57</td>\n      <td>1.56</td>\n      <td>1.31</td>\n      <td>0.7</td>\n      <td>1.78</td>\n      <td>0.58</td>\n      <td>8.61</td>\n      <td>20898.83</td>\n      <td>212.18</td>\n      <td>4948.41</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n      <td>4</td>\n      <td>Helsinki, Finland</td>\n      <td>12.0</td>\n      <td>65.0</td>\n      <td>8.0</td>\n      <td>...</td>\n      <td>2.3</td>\n      <td>3.87</td>\n      <td>2.13</td>\n      <td>2.91</td>\n      <td>1.61</td>\n      <td>1.25</td>\n      <td>12.34</td>\n      <td>24402.77</td>\n      <td>351.6</td>\n      <td>1641.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 62 columns</p>\n</div>","text/plain":"   level_0  index  City  City  City new column name           new column name  \\\n0        0      0     0     0     0               0                Unnamed: 0   \n1        1      1     1     1     1               1  Saint Petersburg, Russia   \n2        2      2     2     2     2               2          Istanbul, Turkey   \n3        3      3     3     3     3               3             Izmir, Turkey   \n4        4      4     4     4     4               4         Helsinki, Finland   \n\n                              0  \\\n0  Meal, Inexpensive Restaurant   \n1                          7.34   \n2                          4.58   \n3                          3.06   \n4                          12.0   \n\n                                                   1  \\\n0  Meal for 2 People, Mid-range Restaurant, Three...   \n1                                              29.35   \n2                                              15.28   \n3                                              12.22   \n4                                               65.0   \n\n                                                2  ...                45  \\\n0  McMeal at McDonalds (or Equivalent Combo Meal)  ...  Lettuce (1 head)   \n1                                             4.4  ...              0.86   \n2                                            3.82  ...              0.61   \n3                                            3.06  ...              0.57   \n4                                             8.0  ...               2.3   \n\n                     46                   47            48            49  \\\n0  Cappuccino (regular)  Rice (white), (1kg)  Tomato (1kg)  Banana (1kg)   \n1                  1.96                 0.92          1.91          0.89   \n2                  1.84                  1.3           0.8          1.91   \n3                  1.56                 1.31           0.7          1.78   \n4                  3.87                 2.13          2.91          1.61   \n\n            50                                                 51  \\\n0  Onion (1kg)  Beef Round (1kg) (or Equivalent Back Leg Red M...   \n1         0.48                                               7.18   \n2         0.62                                               9.73   \n3         0.58                                               8.61   \n4         1.25                                              12.34   \n\n                                                  52  \\\n0  Toyota Corolla 1.6l 97kW Comfort (Or Equivalen...   \n1                                           19305.29   \n2                                           20874.72   \n3                                           20898.83   \n4                                           24402.77   \n\n                                                  53  \\\n0  Preschool (or Kindergarten), Full Day, Private...   \n1                                             411.83   \n2                                             282.94   \n3                                             212.18   \n4                                              351.6   \n\n                                                 54  \n0  International Primary School, Yearly for 1 Child  \n1                                           5388.86  \n2                                           6905.43  \n3                                           4948.41  \n4                                            1641.0  \n\n[5 rows x 62 columns]"},"exec_count":134,"output_type":"execute_result"}},"pos":14,"type":"cell"}
{"cell_type":"code","exec_count":159,"id":"3c0dc2","input":"costofliving1_.drop(['level_0', 'index', 'City', 'new_column_name'], axis=1)","output":{"0":{"ename":"KeyError","evalue":"\"['level_0' 'index' 'City' 'new_column_name'] not found in axis\"","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","Input \u001b[0;32mIn [159]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m \u001b[43mcostofliving1_\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdrop\u001b[49m\u001b[43m(\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mlevel_0\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mindex\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mCity\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mnew_column_name\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m1\u001b[39;49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/util/_decorators.py:311\u001b[0m, in \u001b[0;36mdeprecate_nonkeyword_arguments.<locals>.decorate.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    305\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(args) \u001b[38;5;241m>\u001b[39m num_allow_args:\n\u001b[1;32m    306\u001b[0m     warnings\u001b[38;5;241m.\u001b[39mwarn(\n\u001b[1;32m    307\u001b[0m         msg\u001b[38;5;241m.\u001b[39mformat(arguments\u001b[38;5;241m=\u001b[39marguments),\n\u001b[1;32m    308\u001b[0m         \u001b[38;5;167;01mFutureWarning\u001b[39;00m,\n\u001b[1;32m    309\u001b[0m         stacklevel\u001b[38;5;241m=\u001b[39mstacklevel,\n\u001b[1;32m    310\u001b[0m     )\n\u001b[0;32m--> 311\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/frame.py:4954\u001b[0m, in \u001b[0;36mDataFrame.drop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4806\u001b[0m \u001b[38;5;129m@deprecate_nonkeyword_arguments\u001b[39m(version\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, allowed_args\u001b[38;5;241m=\u001b[39m[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mself\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mlabels\u001b[39m\u001b[38;5;124m\"\u001b[39m])\n\u001b[1;32m   4807\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mdrop\u001b[39m(\n\u001b[1;32m   4808\u001b[0m     \u001b[38;5;28mself\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   4815\u001b[0m     errors: \u001b[38;5;28mstr\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mraise\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[1;32m   4816\u001b[0m ):\n\u001b[1;32m   4817\u001b[0m     \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m   4818\u001b[0m \u001b[38;5;124;03m    Drop specified labels from rows or columns.\u001b[39;00m\n\u001b[1;32m   4819\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   4952\u001b[0m \u001b[38;5;124;03m            weight  1.0     0.8\u001b[39;00m\n\u001b[1;32m   4953\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m-> 4954\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdrop\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   4955\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlabels\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlabels\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4956\u001b[0m \u001b[43m        \u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4957\u001b[0m \u001b[43m        \u001b[49m\u001b[43mindex\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mindex\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4958\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4959\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlevel\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlevel\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4960\u001b[0m \u001b[43m        \u001b[49m\u001b[43minplace\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43minplace\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4961\u001b[0m \u001b[43m        \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4962\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/generic.py:4267\u001b[0m, in \u001b[0;36mNDFrame.drop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4265\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m axis, labels \u001b[38;5;129;01min\u001b[39;00m axes\u001b[38;5;241m.\u001b[39mitems():\n\u001b[1;32m   4266\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m labels \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m-> 4267\u001b[0m         obj \u001b[38;5;241m=\u001b[39m \u001b[43mobj\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_drop_axis\u001b[49m\u001b[43m(\u001b[49m\u001b[43mlabels\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlevel\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlevel\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   4269\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m inplace:\n\u001b[1;32m   4270\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_update_inplace(obj)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/generic.py:4340\u001b[0m, in \u001b[0;36mNDFrame._drop_axis\u001b[0;34m(self, labels, axis, level, errors, consolidate, only_slice)\u001b[0m\n\u001b[1;32m   4338\u001b[0m     labels_missing \u001b[38;5;241m=\u001b[39m (axis\u001b[38;5;241m.\u001b[39mget_indexer_for(labels) \u001b[38;5;241m==\u001b[39m \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m1\u001b[39m)\u001b[38;5;241m.\u001b[39many()\n\u001b[1;32m   4339\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m errors \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mraise\u001b[39m\u001b[38;5;124m\"\u001b[39m \u001b[38;5;129;01mand\u001b[39;00m labels_missing:\n\u001b[0;32m-> 4340\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m{\u001b[39;00mlabels\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m not found in axis\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m   4342\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m is_extension_array_dtype(mask\u001b[38;5;241m.\u001b[39mdtype):\n\u001b[1;32m   4343\u001b[0m     \u001b[38;5;66;03m# GH#45860\u001b[39;00m\n\u001b[1;32m   4344\u001b[0m     mask \u001b[38;5;241m=\u001b[39m mask\u001b[38;5;241m.\u001b[39mto_numpy(dtype\u001b[38;5;241m=\u001b[39m\u001b[38;5;28mbool\u001b[39m)\n","\u001b[0;31mKeyError\u001b[0m: \"['level_0' 'index' 'City' 'new_column_name'] not found in axis\""]}},"pos":15,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"b69aef","input":"print(costofliving2.columns)\nprint(costofliving2.shape)","output":{"0":{"name":"stdout","output_type":"stream","text":"Index(['Rank', 'City', 'Cost of Living Index', 'Rent Index',\n       'Cost of Living Plus Rent Index', 'Groceries Index',\n       'Restaurant Price Index', 'Local Purchasing Power Index'],\n      dtype='object')\n(578, 8)\n"}},"pos":10,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":38,"id":"6cad3f","input":"print(costofliving1.shape)","output":{"0":{"name":"stdout","output_type":"stream","text":"(55, 161)\n"}},"pos":7,"type":"cell"}
{"cell_type":"code","exec_count":52,"id":"f7bbc5","input":"import plotly.express as px","pos":8,"type":"cell"}
{"cell_type":"code","exec_count":68,"id":"b35a14","input":"costofliving2.info()","output":{"0":{"name":"stdout","output_type":"stream","text":"<class 'pandas.core.frame.DataFrame'>\nIndex: 7 entries, City to Local Purchasing Power Index\nColumns: 578 entries, 0 to 577\ndtypes: object(578)\nmemory usage: 32.0+ KB\n"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":81,"id":"a71dbd","input":"costofliving2 = pd.read_csv('costofliving.csv')","pos":6,"type":"cell"}
{"cell_type":"code","exec_count":83,"id":"5fb6a6","input":"costofliving2","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Rank</th>\n      <th>City</th>\n      <th>Cost of Living Index</th>\n      <th>Rent Index</th>\n      <th>Cost of Living Plus Rent Index</th>\n      <th>Groceries Index</th>\n      <th>Restaurant Price Index</th>\n      <th>Local Purchasing Power Index</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>NaN</td>\n      <td>Hamilton, Bermuda</td>\n      <td>149.02</td>\n      <td>96.10</td>\n      <td>124.22</td>\n      <td>157.89</td>\n      <td>155.22</td>\n      <td>79.43</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>NaN</td>\n      <td>Zurich, Switzerland</td>\n      <td>131.24</td>\n      <td>69.26</td>\n      <td>102.19</td>\n      <td>136.14</td>\n      <td>132.52</td>\n      <td>129.79</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>NaN</td>\n      <td>Basel, Switzerland</td>\n      <td>130.93</td>\n      <td>49.38</td>\n      <td>92.70</td>\n      <td>137.07</td>\n      <td>130.95</td>\n      <td>111.53</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>NaN</td>\n      <td>Zug, Switzerland</td>\n      <td>128.13</td>\n      <td>72.12</td>\n      <td>101.87</td>\n      <td>132.61</td>\n      <td>130.93</td>\n      <td>143.40</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>NaN</td>\n      <td>Lugano, Switzerland</td>\n      <td>123.99</td>\n      <td>44.99</td>\n      <td>86.96</td>\n      <td>129.17</td>\n      <td>119.80</td>\n      <td>111.96</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>573</th>\n      <td>NaN</td>\n      <td>Kanpur, India</td>\n      <td>20.79</td>\n      <td>3.60</td>\n      <td>12.73</td>\n      <td>22.19</td>\n      <td>13.31</td>\n      <td>38.83</td>\n    </tr>\n    <tr>\n      <th>574</th>\n      <td>NaN</td>\n      <td>Karachi, Pakistan</td>\n      <td>20.75</td>\n      <td>4.84</td>\n      <td>13.29</td>\n      <td>18.48</td>\n      <td>15.21</td>\n      <td>29.16</td>\n    </tr>\n    <tr>\n      <th>575</th>\n      <td>NaN</td>\n      <td>Rawalpindi, Pakistan</td>\n      <td>20.52</td>\n      <td>4.78</td>\n      <td>13.14</td>\n      <td>18.51</td>\n      <td>16.18</td>\n      <td>22.91</td>\n    </tr>\n    <tr>\n      <th>576</th>\n      <td>NaN</td>\n      <td>Multan, Pakistan</td>\n      <td>18.68</td>\n      <td>2.94</td>\n      <td>11.30</td>\n      <td>18.37</td>\n      <td>11.80</td>\n      <td>25.09</td>\n    </tr>\n    <tr>\n      <th>577</th>\n      <td>NaN</td>\n      <td>Peshawar, Pakistan</td>\n      <td>18.55</td>\n      <td>2.37</td>\n      <td>10.97</td>\n      <td>16.62</td>\n      <td>14.39</td>\n      <td>26.00</td>\n    </tr>\n  </tbody>\n</table>\n<p>578 rows Ã— 8 columns</p>\n</div>","text/plain":"     Rank                  City  Cost of Living Index  Rent Index  \\\n0     NaN     Hamilton, Bermuda                149.02       96.10   \n1     NaN   Zurich, Switzerland                131.24       69.26   \n2     NaN    Basel, Switzerland                130.93       49.38   \n3     NaN      Zug, Switzerland                128.13       72.12   \n4     NaN   Lugano, Switzerland                123.99       44.99   \n..    ...                   ...                   ...         ...   \n573   NaN         Kanpur, India                 20.79        3.60   \n574   NaN     Karachi, Pakistan                 20.75        4.84   \n575   NaN  Rawalpindi, Pakistan                 20.52        4.78   \n576   NaN      Multan, Pakistan                 18.68        2.94   \n577   NaN    Peshawar, Pakistan                 18.55        2.37   \n\n     Cost of Living Plus Rent Index  Groceries Index  Restaurant Price Index  \\\n0                            124.22           157.89                  155.22   \n1                            102.19           136.14                  132.52   \n2                             92.70           137.07                  130.95   \n3                            101.87           132.61                  130.93   \n4                             86.96           129.17                  119.80   \n..                              ...              ...                     ...   \n573                           12.73            22.19                   13.31   \n574                           13.29            18.48                   15.21   \n575                           13.14            18.51                   16.18   \n576                           11.30            18.37                   11.80   \n577                           10.97            16.62                   14.39   \n\n     Local Purchasing Power Index  \n0                           79.43  \n1                          129.79  \n2                          111.53  \n3                          143.40  \n4                          111.96  \n..                            ...  \n573                         38.83  \n574                         29.16  \n575                         22.91  \n576                         25.09  \n577                         26.00  \n\n[578 rows x 8 columns]"},"exec_count":83,"output_type":"execute_result"}},"pos":12,"type":"cell"}
{"cell_type":"code","exec_count":84,"id":"01b6c6","input":"costofliving2['Rank']","output":{"0":{"data":{"text/plain":"0     NaN\n1     NaN\n2     NaN\n3     NaN\n4     NaN\n       ..\n573   NaN\n574   NaN\n575   NaN\n576   NaN\n577   NaN\nName: Rank, Length: 578, dtype: float64"},"exec_count":84,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":93,"id":"72a347","input":"costofliving2 = costofliving2.drop(['Rank'], axis=1)","output":{"0":{"ename":"KeyError","evalue":"\"['Rank'] not found in axis\"","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mKeyError\u001b[0m                                  Traceback (most recent call last)","Input \u001b[0;32mIn [93]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m costofliving2 \u001b[38;5;241m=\u001b[39m \u001b[43mcostofliving2\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdrop\u001b[49m\u001b[43m(\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mRank\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;241;43m1\u001b[39;49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/util/_decorators.py:311\u001b[0m, in \u001b[0;36mdeprecate_nonkeyword_arguments.<locals>.decorate.<locals>.wrapper\u001b[0;34m(*args, **kwargs)\u001b[0m\n\u001b[1;32m    305\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mlen\u001b[39m(args) \u001b[38;5;241m>\u001b[39m num_allow_args:\n\u001b[1;32m    306\u001b[0m     warnings\u001b[38;5;241m.\u001b[39mwarn(\n\u001b[1;32m    307\u001b[0m         msg\u001b[38;5;241m.\u001b[39mformat(arguments\u001b[38;5;241m=\u001b[39marguments),\n\u001b[1;32m    308\u001b[0m         \u001b[38;5;167;01mFutureWarning\u001b[39;00m,\n\u001b[1;32m    309\u001b[0m         stacklevel\u001b[38;5;241m=\u001b[39mstacklevel,\n\u001b[1;32m    310\u001b[0m     )\n\u001b[0;32m--> 311\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43margs\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/frame.py:4954\u001b[0m, in \u001b[0;36mDataFrame.drop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4806\u001b[0m \u001b[38;5;129m@deprecate_nonkeyword_arguments\u001b[39m(version\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, allowed_args\u001b[38;5;241m=\u001b[39m[\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mself\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mlabels\u001b[39m\u001b[38;5;124m\"\u001b[39m])\n\u001b[1;32m   4807\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mdrop\u001b[39m(\n\u001b[1;32m   4808\u001b[0m     \u001b[38;5;28mself\u001b[39m,\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   4815\u001b[0m     errors: \u001b[38;5;28mstr\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mraise\u001b[39m\u001b[38;5;124m\"\u001b[39m,\n\u001b[1;32m   4816\u001b[0m ):\n\u001b[1;32m   4817\u001b[0m     \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m   4818\u001b[0m \u001b[38;5;124;03m    Drop specified labels from rows or columns.\u001b[39;00m\n\u001b[1;32m   4819\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m   4952\u001b[0m \u001b[38;5;124;03m            weight  1.0     0.8\u001b[39;00m\n\u001b[1;32m   4953\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m-> 4954\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43msuper\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdrop\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   4955\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlabels\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlabels\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4956\u001b[0m \u001b[43m        \u001b[49m\u001b[43maxis\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4957\u001b[0m \u001b[43m        \u001b[49m\u001b[43mindex\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mindex\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4958\u001b[0m \u001b[43m        \u001b[49m\u001b[43mcolumns\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcolumns\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4959\u001b[0m \u001b[43m        \u001b[49m\u001b[43mlevel\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlevel\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4960\u001b[0m \u001b[43m        \u001b[49m\u001b[43minplace\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43minplace\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4961\u001b[0m \u001b[43m        \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   4962\u001b[0m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/generic.py:4267\u001b[0m, in \u001b[0;36mNDFrame.drop\u001b[0;34m(self, labels, axis, index, columns, level, inplace, errors)\u001b[0m\n\u001b[1;32m   4265\u001b[0m \u001b[38;5;28;01mfor\u001b[39;00m axis, labels \u001b[38;5;129;01min\u001b[39;00m axes\u001b[38;5;241m.\u001b[39mitems():\n\u001b[1;32m   4266\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m labels \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m-> 4267\u001b[0m         obj \u001b[38;5;241m=\u001b[39m \u001b[43mobj\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_drop_axis\u001b[49m\u001b[43m(\u001b[49m\u001b[43mlabels\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43maxis\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlevel\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlevel\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   4269\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m inplace:\n\u001b[1;32m   4270\u001b[0m     \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_update_inplace(obj)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/generic.py:4311\u001b[0m, in \u001b[0;36mNDFrame._drop_axis\u001b[0;34m(self, labels, axis, level, errors, consolidate, only_slice)\u001b[0m\n\u001b[1;32m   4309\u001b[0m         new_axis \u001b[38;5;241m=\u001b[39m axis\u001b[38;5;241m.\u001b[39mdrop(labels, level\u001b[38;5;241m=\u001b[39mlevel, errors\u001b[38;5;241m=\u001b[39merrors)\n\u001b[1;32m   4310\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 4311\u001b[0m         new_axis \u001b[38;5;241m=\u001b[39m \u001b[43maxis\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mdrop\u001b[49m\u001b[43m(\u001b[49m\u001b[43mlabels\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   4312\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m axis\u001b[38;5;241m.\u001b[39mget_indexer(new_axis)\n\u001b[1;32m   4314\u001b[0m \u001b[38;5;66;03m# Case for non-unique axis\u001b[39;00m\n\u001b[1;32m   4315\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/indexes/base.py:6644\u001b[0m, in \u001b[0;36mIndex.drop\u001b[0;34m(self, labels, errors)\u001b[0m\n\u001b[1;32m   6642\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m mask\u001b[38;5;241m.\u001b[39many():\n\u001b[1;32m   6643\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m errors \u001b[38;5;241m!=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mignore\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n\u001b[0;32m-> 6644\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mKeyError\u001b[39;00m(\u001b[38;5;124mf\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;132;01m{\u001b[39;00m\u001b[38;5;28mlist\u001b[39m(labels[mask])\u001b[38;5;132;01m}\u001b[39;00m\u001b[38;5;124m not found in axis\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m   6645\u001b[0m     indexer \u001b[38;5;241m=\u001b[39m indexer[\u001b[38;5;241m~\u001b[39mmask]\n\u001b[1;32m   6646\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mdelete(indexer)\n","\u001b[0;31mKeyError\u001b[0m: \"['Rank'] not found in axis\""]}},"pos":17,"type":"cell"}
{"cell_type":"code","exec_count":98,"id":"43cd31","input":"costofliving2","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>City</th>\n      <th>Cost of Living Index</th>\n      <th>Rent Index</th>\n      <th>Cost of Living Plus Rent Index</th>\n      <th>Groceries Index</th>\n      <th>Restaurant Price Index</th>\n      <th>Local Purchasing Power Index</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Hamilton, Bermuda</td>\n      <td>149.02</td>\n      <td>96.10</td>\n      <td>124.22</td>\n      <td>157.89</td>\n      <td>155.22</td>\n      <td>79.43</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Zurich, Switzerland</td>\n      <td>131.24</td>\n      <td>69.26</td>\n      <td>102.19</td>\n      <td>136.14</td>\n      <td>132.52</td>\n      <td>129.79</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Basel, Switzerland</td>\n      <td>130.93</td>\n      <td>49.38</td>\n      <td>92.70</td>\n      <td>137.07</td>\n      <td>130.95</td>\n      <td>111.53</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Zug, Switzerland</td>\n      <td>128.13</td>\n      <td>72.12</td>\n      <td>101.87</td>\n      <td>132.61</td>\n      <td>130.93</td>\n      <td>143.40</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Lugano, Switzerland</td>\n      <td>123.99</td>\n      <td>44.99</td>\n      <td>86.96</td>\n      <td>129.17</td>\n      <td>119.80</td>\n      <td>111.96</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>573</th>\n      <td>Kanpur, India</td>\n      <td>20.79</td>\n      <td>3.60</td>\n      <td>12.73</td>\n      <td>22.19</td>\n      <td>13.31</td>\n      <td>38.83</td>\n    </tr>\n    <tr>\n      <th>574</th>\n      <td>Karachi, Pakistan</td>\n      <td>20.75</td>\n      <td>4.84</td>\n      <td>13.29</td>\n      <td>18.48</td>\n      <td>15.21</td>\n      <td>29.16</td>\n    </tr>\n    <tr>\n      <th>575</th>\n      <td>Rawalpindi, Pakistan</td>\n      <td>20.52</td>\n      <td>4.78</td>\n      <td>13.14</td>\n      <td>18.51</td>\n      <td>16.18</td>\n      <td>22.91</td>\n    </tr>\n    <tr>\n      <th>576</th>\n      <td>Multan, Pakistan</td>\n      <td>18.68</td>\n      <td>2.94</td>\n      <td>11.30</td>\n      <td>18.37</td>\n      <td>11.80</td>\n      <td>25.09</td>\n    </tr>\n    <tr>\n      <th>577</th>\n      <td>Peshawar, Pakistan</td>\n      <td>18.55</td>\n      <td>2.37</td>\n      <td>10.97</td>\n      <td>16.62</td>\n      <td>14.39</td>\n      <td>26.00</td>\n    </tr>\n  </tbody>\n</table>\n<p>578 rows Ã— 7 columns</p>\n</div>","text/plain":"                     City  Cost of Living Index  Rent Index  \\\n0       Hamilton, Bermuda                149.02       96.10   \n1     Zurich, Switzerland                131.24       69.26   \n2      Basel, Switzerland                130.93       49.38   \n3        Zug, Switzerland                128.13       72.12   \n4     Lugano, Switzerland                123.99       44.99   \n..                    ...                   ...         ...   \n573         Kanpur, India                 20.79        3.60   \n574     Karachi, Pakistan                 20.75        4.84   \n575  Rawalpindi, Pakistan                 20.52        4.78   \n576      Multan, Pakistan                 18.68        2.94   \n577    Peshawar, Pakistan                 18.55        2.37   \n\n     Cost of Living Plus Rent Index  Groceries Index  Restaurant Price Index  \\\n0                            124.22           157.89                  155.22   \n1                            102.19           136.14                  132.52   \n2                             92.70           137.07                  130.95   \n3                            101.87           132.61                  130.93   \n4                             86.96           129.17                  119.80   \n..                              ...              ...                     ...   \n573                           12.73            22.19                   13.31   \n574                           13.29            18.48                   15.21   \n575                           13.14            18.51                   16.18   \n576                           11.30            18.37                   11.80   \n577                           10.97            16.62                   14.39   \n\n     Local Purchasing Power Index  \n0                           79.43  \n1                          129.79  \n2                          111.53  \n3                          143.40  \n4                          111.96  \n..                            ...  \n573                         38.83  \n574                         29.16  \n575                         22.91  \n576                         25.09  \n577                         26.00  \n\n[578 rows x 7 columns]"},"exec_count":98,"output_type":"execute_result"}},"pos":18,"type":"cell"}
{"cell_type":"markdown","id":"2630b8","input":"\nHappy Learning guys. I want you all to try and upload your finalized datasets to this notebook, and try and create some basic visualizations using the plotly.express package.\n\nDo feel free to explore the library at - https://plotly.com/python/plotly-express/ for some innovative ideas.\n\nLet's have some great work from you all by the end of today.","pos":3,"type":"cell"}
{"cell_type":"markdown","id":"fba925","input":"# Group_2(Nne Ezi & Katherine)","pos":2,"type":"cell"}
{"id":0,"time":1655151569139,"type":"user"}
{"last_load":1655151569376,"type":"file"}