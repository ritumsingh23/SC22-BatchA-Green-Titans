{"backend_state":"init","connection_file":"/projects/d061bad1-2739-44d6-bf33-6fa5871e6830/.local/share/jupyter/runtime/kernel-9a4d2620-78f2-4f71-acfe-298d35216917.json","kernel":"ds_env","kernel_error":"","kernel_state":"idle","kernel_usage":{"cpu":0,"memory":0},"metadata":{"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.8.13"}},"trust":true,"type":"settings"}
{"cell_type":"code","exec_count":0,"id":"03168c","input":"","pos":84,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"0bbb23","input":"","pos":88,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"15a6ea","input":"","pos":7,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"18b578","input":"","pos":87,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"218d1d","input":"","pos":81,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"294b7f","input":"","pos":85,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"2f0ce6","input":"","pos":14,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"33b49b","input":"","pos":86,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"3a00c9","input":"","pos":13,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"3f9405","input":"","pos":90,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"4dbaba","input":"","pos":89,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"6078f6","input":"","pos":94,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"7c2970","input":"","pos":17,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"8ae9a4","input":"","pos":6,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"8f1bec","input":"","pos":96,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"8fb250","input":"","pos":92,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"901ab7","input":"","pos":83,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"9440c7","input":"","pos":95,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"945a71","input":"","pos":93,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"a8cf69","input":"","pos":82,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"b83677","input":"","pos":9,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"bc6f27","input":"","pos":28,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"bc7463","input":"","pos":62,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"c1fbcf","input":"","pos":27,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"cc246f","input":"","pos":55,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"dc7fc5","input":"","pos":66,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"e2188c","input":"","pos":12,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"ef20af","input":"","pos":8,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f8270f","input":"","pos":33,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"f83abe","input":"","pos":15,"type":"cell"}
{"cell_type":"code","exec_count":0,"id":"fa867b","input":"","pos":91,"type":"cell"}
{"cell_type":"code","exec_count":1,"id":"546101","input":"import pandas as pd\nimport numpy as np\nimport plotly.express as px\nimport matplotlib.pyplot as plt","pos":1,"type":"cell"}
{"cell_type":"code","exec_count":10,"id":"46e4f5","input":"costofliving2 = pd.read_csv('./Project_Data/cost-of-living.csv')","pos":19,"type":"cell"}
{"cell_type":"code","exec_count":11,"id":"94e14c","input":"costofliving2 = costofliving2.transpose() #swap rows and columns","pos":20,"type":"cell"}
{"cell_type":"code","exec_count":12,"id":"9a8d74","input":"costofliving2.columns = costofliving2.iloc[0] #assign row as column header","pos":21,"type":"cell"}
{"cell_type":"code","exec_count":13,"id":"e019dc","input":"costofliving2.reset_index(inplace=True) #convert index to column","pos":22,"type":"cell"}
{"cell_type":"code","exec_count":14,"id":"f47f6e","input":"costofliving2.drop(0, axis=0, inplace=True) #delete row 0","pos":23,"type":"cell"}
{"cell_type":"code","exec_count":15,"id":"e2200b","input":"costofliving2.rename(columns = {'index':'City'}, inplace = True) #renaming column header","pos":24,"type":"cell"}
{"cell_type":"code","exec_count":16,"id":"6528a6","input":"costofliving2 = costofliving2.rename_axis(None, axis=1) #removing index header","pos":25,"type":"cell"}
{"cell_type":"code","exec_count":17,"id":"259589","input":"costofliving2","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>City</th>\n      <th>Meal, Inexpensive Restaurant</th>\n      <th>Meal for 2 People, Mid-range Restaurant, Three-course</th>\n      <th>McMeal at McDonalds (or Equivalent Combo Meal)</th>\n      <th>Domestic Beer (0.5 liter draught)</th>\n      <th>Imported Beer (0.33 liter bottle)</th>\n      <th>Coke/Pepsi (0.33 liter bottle)</th>\n      <th>Water (0.33 liter bottle)</th>\n      <th>Milk (regular), (1 liter)</th>\n      <th>Loaf of Fresh White Bread (500g)</th>\n      <th>...</th>\n      <th>Lettuce (1 head)</th>\n      <th>Cappuccino (regular)</th>\n      <th>Rice (white), (1kg)</th>\n      <th>Tomato (1kg)</th>\n      <th>Banana (1kg)</th>\n      <th>Onion (1kg)</th>\n      <th>Beef Round (1kg) (or Equivalent Back Leg Red Meat)</th>\n      <th>Toyota Corolla 1.6l 97kW Comfort (Or Equivalent New Car)</th>\n      <th>Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child</th>\n      <th>International Primary School, Yearly for 1 Child</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>1</th>\n      <td>Saint Petersburg, Russia</td>\n      <td>7.34</td>\n      <td>29.35</td>\n      <td>4.4</td>\n      <td>2.2</td>\n      <td>2.2</td>\n      <td>0.76</td>\n      <td>0.53</td>\n      <td>0.98</td>\n      <td>0.71</td>\n      <td>...</td>\n      <td>0.86</td>\n      <td>1.96</td>\n      <td>0.92</td>\n      <td>1.91</td>\n      <td>0.89</td>\n      <td>0.48</td>\n      <td>7.18</td>\n      <td>19305.29</td>\n      <td>411.83</td>\n      <td>5388.86</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Istanbul, Turkey</td>\n      <td>4.58</td>\n      <td>15.28</td>\n      <td>3.82</td>\n      <td>3.06</td>\n      <td>3.06</td>\n      <td>0.64</td>\n      <td>0.24</td>\n      <td>0.71</td>\n      <td>0.36</td>\n      <td>...</td>\n      <td>0.61</td>\n      <td>1.84</td>\n      <td>1.3</td>\n      <td>0.8</td>\n      <td>1.91</td>\n      <td>0.62</td>\n      <td>9.73</td>\n      <td>20874.72</td>\n      <td>282.94</td>\n      <td>6905.43</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Izmir, Turkey</td>\n      <td>3.06</td>\n      <td>12.22</td>\n      <td>3.06</td>\n      <td>2.29</td>\n      <td>2.75</td>\n      <td>0.61</td>\n      <td>0.22</td>\n      <td>0.65</td>\n      <td>0.38</td>\n      <td>...</td>\n      <td>0.57</td>\n      <td>1.56</td>\n      <td>1.31</td>\n      <td>0.7</td>\n      <td>1.78</td>\n      <td>0.58</td>\n      <td>8.61</td>\n      <td>20898.83</td>\n      <td>212.18</td>\n      <td>4948.41</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Helsinki, Finland</td>\n      <td>12.0</td>\n      <td>65.0</td>\n      <td>8.0</td>\n      <td>6.5</td>\n      <td>6.75</td>\n      <td>2.66</td>\n      <td>1.89</td>\n      <td>0.96</td>\n      <td>2.27</td>\n      <td>...</td>\n      <td>2.3</td>\n      <td>3.87</td>\n      <td>2.13</td>\n      <td>2.91</td>\n      <td>1.61</td>\n      <td>1.25</td>\n      <td>12.34</td>\n      <td>24402.77</td>\n      <td>351.6</td>\n      <td>1641.0</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Chisinau, Moldova</td>\n      <td>4.67</td>\n      <td>20.74</td>\n      <td>4.15</td>\n      <td>1.04</td>\n      <td>1.43</td>\n      <td>0.64</td>\n      <td>0.44</td>\n      <td>0.68</td>\n      <td>0.33</td>\n      <td>...</td>\n      <td>0.84</td>\n      <td>1.25</td>\n      <td>0.93</td>\n      <td>1.56</td>\n      <td>1.37</td>\n      <td>0.59</td>\n      <td>5.37</td>\n      <td>17238.13</td>\n      <td>210.52</td>\n      <td>2679.3</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>156</th>\n      <td>Melbourne, Australia</td>\n      <td>10.22</td>\n      <td>49.54</td>\n      <td>7.12</td>\n      <td>5.57</td>\n      <td>5.57</td>\n      <td>1.91</td>\n      <td>1.7</td>\n      <td>0.9</td>\n      <td>1.88</td>\n      <td>...</td>\n      <td>1.57</td>\n      <td>2.63</td>\n      <td>1.58</td>\n      <td>3.06</td>\n      <td>2.2</td>\n      <td>1.78</td>\n      <td>9.42</td>\n      <td>15221.84</td>\n      <td>1250.41</td>\n      <td>12874.09</td>\n    </tr>\n    <tr>\n      <th>157</th>\n      <td>Perth, Australia</td>\n      <td>12.43</td>\n      <td>56.55</td>\n      <td>7.32</td>\n      <td>5.9</td>\n      <td>5.59</td>\n      <td>1.79</td>\n      <td>1.62</td>\n      <td>1.03</td>\n      <td>1.76</td>\n      <td>...</td>\n      <td>1.26</td>\n      <td>2.86</td>\n      <td>1.96</td>\n      <td>2.4</td>\n      <td>2.11</td>\n      <td>1.29</td>\n      <td>9.49</td>\n      <td>15239.2</td>\n      <td>1190.12</td>\n      <td>11526.08</td>\n    </tr>\n    <tr>\n      <th>158</th>\n      <td>Sydney, Australia</td>\n      <td>11.81</td>\n      <td>54.37</td>\n      <td>7.15</td>\n      <td>4.97</td>\n      <td>4.97</td>\n      <td>1.99</td>\n      <td>1.68</td>\n      <td>0.9</td>\n      <td>1.85</td>\n      <td>...</td>\n      <td>1.59</td>\n      <td>2.48</td>\n      <td>1.65</td>\n      <td>3.01</td>\n      <td>2.17</td>\n      <td>1.72</td>\n      <td>11.24</td>\n      <td>15066.62</td>\n      <td>1389.43</td>\n      <td>11933.55</td>\n    </tr>\n    <tr>\n      <th>159</th>\n      <td>Alexandria, Egypt</td>\n      <td>2.81</td>\n      <td>14.06</td>\n      <td>3.38</td>\n      <td>1.69</td>\n      <td>2.81</td>\n      <td>0.32</td>\n      <td>0.19</td>\n      <td>0.81</td>\n      <td>0.51</td>\n      <td>...</td>\n      <td>0.2</td>\n      <td>1.45</td>\n      <td>0.66</td>\n      <td>0.39</td>\n      <td>0.66</td>\n      <td>0.31</td>\n      <td>8.37</td>\n      <td>23071.86</td>\n      <td>55.41</td>\n      <td>2132.54</td>\n    </tr>\n    <tr>\n      <th>160</th>\n      <td>Quito, Ecuador</td>\n      <td>3.59</td>\n      <td>31.45</td>\n      <td>5.39</td>\n      <td>1.35</td>\n      <td>2.7</td>\n      <td>0.71</td>\n      <td>0.47</td>\n      <td>0.87</td>\n      <td>1.35</td>\n      <td>...</td>\n      <td>0.58</td>\n      <td>1.81</td>\n      <td>1.34</td>\n      <td>1.06</td>\n      <td>0.99</td>\n      <td>0.94</td>\n      <td>6.46</td>\n      <td>25324.92</td>\n      <td>276.63</td>\n      <td>6410.05</td>\n    </tr>\n  </tbody>\n</table>\n<p>160 rows × 56 columns</p>\n</div>","text/plain":"                         City Meal, Inexpensive Restaurant  \\\n1    Saint Petersburg, Russia                         7.34   \n2            Istanbul, Turkey                         4.58   \n3               Izmir, Turkey                         3.06   \n4           Helsinki, Finland                         12.0   \n5           Chisinau, Moldova                         4.67   \n..                        ...                          ...   \n156      Melbourne, Australia                        10.22   \n157          Perth, Australia                        12.43   \n158         Sydney, Australia                        11.81   \n159         Alexandria, Egypt                         2.81   \n160            Quito, Ecuador                         3.59   \n\n    Meal for 2 People, Mid-range Restaurant, Three-course  \\\n1                                                29.35      \n2                                                15.28      \n3                                                12.22      \n4                                                 65.0      \n5                                                20.74      \n..                                                 ...      \n156                                              49.54      \n157                                              56.55      \n158                                              54.37      \n159                                              14.06      \n160                                              31.45      \n\n    McMeal at McDonalds (or Equivalent Combo Meal)  \\\n1                                              4.4   \n2                                             3.82   \n3                                             3.06   \n4                                              8.0   \n5                                             4.15   \n..                                             ...   \n156                                           7.12   \n157                                           7.32   \n158                                           7.15   \n159                                           3.38   \n160                                           5.39   \n\n    Domestic Beer (0.5 liter draught) Imported Beer (0.33 liter bottle)  \\\n1                                 2.2                               2.2   \n2                                3.06                              3.06   \n3                                2.29                              2.75   \n4                                 6.5                              6.75   \n5                                1.04                              1.43   \n..                                ...                               ...   \n156                              5.57                              5.57   \n157                               5.9                              5.59   \n158                              4.97                              4.97   \n159                              1.69                              2.81   \n160                              1.35                               2.7   \n\n    Coke/Pepsi (0.33 liter bottle) Water (0.33 liter bottle)   \\\n1                             0.76                       0.53   \n2                             0.64                       0.24   \n3                             0.61                       0.22   \n4                             2.66                       1.89   \n5                             0.64                       0.44   \n..                             ...                        ...   \n156                           1.91                        1.7   \n157                           1.79                       1.62   \n158                           1.99                       1.68   \n159                           0.32                       0.19   \n160                           0.71                       0.47   \n\n    Milk (regular), (1 liter) Loaf of Fresh White Bread (500g)  ...  \\\n1                        0.98                             0.71  ...   \n2                        0.71                             0.36  ...   \n3                        0.65                             0.38  ...   \n4                        0.96                             2.27  ...   \n5                        0.68                             0.33  ...   \n..                        ...                              ...  ...   \n156                       0.9                             1.88  ...   \n157                      1.03                             1.76  ...   \n158                       0.9                             1.85  ...   \n159                      0.81                             0.51  ...   \n160                      0.87                             1.35  ...   \n\n    Lettuce (1 head) Cappuccino (regular) Rice (white), (1kg) Tomato (1kg)  \\\n1               0.86                 1.96                0.92         1.91   \n2               0.61                 1.84                 1.3          0.8   \n3               0.57                 1.56                1.31          0.7   \n4                2.3                 3.87                2.13         2.91   \n5               0.84                 1.25                0.93         1.56   \n..               ...                  ...                 ...          ...   \n156             1.57                 2.63                1.58         3.06   \n157             1.26                 2.86                1.96          2.4   \n158             1.59                 2.48                1.65         3.01   \n159              0.2                 1.45                0.66         0.39   \n160             0.58                 1.81                1.34         1.06   \n\n    Banana (1kg) Onion (1kg)  \\\n1           0.89        0.48   \n2           1.91        0.62   \n3           1.78        0.58   \n4           1.61        1.25   \n5           1.37        0.59   \n..           ...         ...   \n156          2.2        1.78   \n157         2.11        1.29   \n158         2.17        1.72   \n159         0.66        0.31   \n160         0.99        0.94   \n\n    Beef Round (1kg) (or Equivalent Back Leg Red Meat)  \\\n1                                                 7.18   \n2                                                 9.73   \n3                                                 8.61   \n4                                                12.34   \n5                                                 5.37   \n..                                                 ...   \n156                                               9.42   \n157                                               9.49   \n158                                              11.24   \n159                                               8.37   \n160                                               6.46   \n\n    Toyota Corolla 1.6l 97kW Comfort (Or Equivalent New Car)  \\\n1                                             19305.29         \n2                                             20874.72         \n3                                             20898.83         \n4                                             24402.77         \n5                                             17238.13         \n..                                                 ...         \n156                                           15221.84         \n157                                            15239.2         \n158                                           15066.62         \n159                                           23071.86         \n160                                           25324.92         \n\n    Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child  \\\n1                                               411.83                    \n2                                               282.94                    \n3                                               212.18                    \n4                                                351.6                    \n5                                               210.52                    \n..                                                 ...                    \n156                                            1250.41                    \n157                                            1190.12                    \n158                                            1389.43                    \n159                                              55.41                    \n160                                             276.63                    \n\n    International Primary School, Yearly for 1 Child  \n1                                            5388.86  \n2                                            6905.43  \n3                                            4948.41  \n4                                             1641.0  \n5                                             2679.3  \n..                                               ...  \n156                                         12874.09  \n157                                         11526.08  \n158                                         11933.55  \n159                                          2132.54  \n160                                          6410.05  \n\n[160 rows x 56 columns]"},"exec_count":17,"output_type":"execute_result"}},"pos":26,"type":"cell"}
{"cell_type":"code","exec_count":18,"id":"389cc1","input":"#everything below is for costofliving1 in order!","pos":29,"type":"cell"}
{"cell_type":"code","exec_count":19,"id":"1d67ac","input":"costofliving1 = pd.read_csv('./Project_Data/costofliving.csv')","pos":30,"type":"cell"}
{"cell_type":"code","exec_count":2,"id":"cb05cb","input":"costofliving1 = pd.read_csv('./Project_Data/costofliving.csv')\ncostofliving2 = pd.read_csv('./Project_Data/cost-of-living.csv')","pos":2,"type":"cell"}
{"cell_type":"code","exec_count":20,"id":"177acf","input":"costofliving1 = costofliving1.drop(['Rank'],axis=1)","pos":31,"type":"cell"}
{"cell_type":"code","exec_count":21,"id":"f184ac","input":"costofliving1","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>City</th>\n      <th>Cost of Living Index</th>\n      <th>Rent Index</th>\n      <th>Cost of Living Plus Rent Index</th>\n      <th>Groceries Index</th>\n      <th>Restaurant Price Index</th>\n      <th>Local Purchasing Power Index</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Hamilton, Bermuda</td>\n      <td>149.02</td>\n      <td>96.10</td>\n      <td>124.22</td>\n      <td>157.89</td>\n      <td>155.22</td>\n      <td>79.43</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Zurich, Switzerland</td>\n      <td>131.24</td>\n      <td>69.26</td>\n      <td>102.19</td>\n      <td>136.14</td>\n      <td>132.52</td>\n      <td>129.79</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Basel, Switzerland</td>\n      <td>130.93</td>\n      <td>49.38</td>\n      <td>92.70</td>\n      <td>137.07</td>\n      <td>130.95</td>\n      <td>111.53</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Zug, Switzerland</td>\n      <td>128.13</td>\n      <td>72.12</td>\n      <td>101.87</td>\n      <td>132.61</td>\n      <td>130.93</td>\n      <td>143.40</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Lugano, Switzerland</td>\n      <td>123.99</td>\n      <td>44.99</td>\n      <td>86.96</td>\n      <td>129.17</td>\n      <td>119.80</td>\n      <td>111.96</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>573</th>\n      <td>Kanpur, India</td>\n      <td>20.79</td>\n      <td>3.60</td>\n      <td>12.73</td>\n      <td>22.19</td>\n      <td>13.31</td>\n      <td>38.83</td>\n    </tr>\n    <tr>\n      <th>574</th>\n      <td>Karachi, Pakistan</td>\n      <td>20.75</td>\n      <td>4.84</td>\n      <td>13.29</td>\n      <td>18.48</td>\n      <td>15.21</td>\n      <td>29.16</td>\n    </tr>\n    <tr>\n      <th>575</th>\n      <td>Rawalpindi, Pakistan</td>\n      <td>20.52</td>\n      <td>4.78</td>\n      <td>13.14</td>\n      <td>18.51</td>\n      <td>16.18</td>\n      <td>22.91</td>\n    </tr>\n    <tr>\n      <th>576</th>\n      <td>Multan, Pakistan</td>\n      <td>18.68</td>\n      <td>2.94</td>\n      <td>11.30</td>\n      <td>18.37</td>\n      <td>11.80</td>\n      <td>25.09</td>\n    </tr>\n    <tr>\n      <th>577</th>\n      <td>Peshawar, Pakistan</td>\n      <td>18.55</td>\n      <td>2.37</td>\n      <td>10.97</td>\n      <td>16.62</td>\n      <td>14.39</td>\n      <td>26.00</td>\n    </tr>\n  </tbody>\n</table>\n<p>578 rows × 7 columns</p>\n</div>","text/plain":"                     City  Cost of Living Index  Rent Index  \\\n0       Hamilton, Bermuda                149.02       96.10   \n1     Zurich, Switzerland                131.24       69.26   \n2      Basel, Switzerland                130.93       49.38   \n3        Zug, Switzerland                128.13       72.12   \n4     Lugano, Switzerland                123.99       44.99   \n..                    ...                   ...         ...   \n573         Kanpur, India                 20.79        3.60   \n574     Karachi, Pakistan                 20.75        4.84   \n575  Rawalpindi, Pakistan                 20.52        4.78   \n576      Multan, Pakistan                 18.68        2.94   \n577    Peshawar, Pakistan                 18.55        2.37   \n\n     Cost of Living Plus Rent Index  Groceries Index  Restaurant Price Index  \\\n0                            124.22           157.89                  155.22   \n1                            102.19           136.14                  132.52   \n2                             92.70           137.07                  130.95   \n3                            101.87           132.61                  130.93   \n4                             86.96           129.17                  119.80   \n..                              ...              ...                     ...   \n573                           12.73            22.19                   13.31   \n574                           13.29            18.48                   15.21   \n575                           13.14            18.51                   16.18   \n576                           11.30            18.37                   11.80   \n577                           10.97            16.62                   14.39   \n\n     Local Purchasing Power Index  \n0                           79.43  \n1                          129.79  \n2                          111.53  \n3                          143.40  \n4                          111.96  \n..                            ...  \n573                         38.83  \n574                         29.16  \n575                         22.91  \n576                         25.09  \n577                         26.00  \n\n[578 rows x 7 columns]"},"exec_count":21,"output_type":"execute_result"}},"pos":32,"scrolled":true,"type":"cell"}
{"cell_type":"code","exec_count":22,"id":"79f835","input":"#Final merged data set below! ","pos":34,"type":"cell"}
{"cell_type":"code","exec_count":23,"id":"7f2bf1","input":"#merged set = 'merged_costofliving'","pos":35,"type":"cell"}
{"cell_type":"code","exec_count":24,"id":"32392b","input":"merged_costofliving = pd.merge(costofliving1, costofliving2, on= 'City') #merging data sets","pos":36,"type":"cell"}
{"cell_type":"code","exec_count":25,"id":"2c796f","input":"merged_costofliving ","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>City</th>\n      <th>Cost of Living Index</th>\n      <th>Rent Index</th>\n      <th>Cost of Living Plus Rent Index</th>\n      <th>Groceries Index</th>\n      <th>Restaurant Price Index</th>\n      <th>Local Purchasing Power Index</th>\n      <th>Meal, Inexpensive Restaurant</th>\n      <th>Meal for 2 People, Mid-range Restaurant, Three-course</th>\n      <th>McMeal at McDonalds (or Equivalent Combo Meal)</th>\n      <th>...</th>\n      <th>Lettuce (1 head)</th>\n      <th>Cappuccino (regular)</th>\n      <th>Rice (white), (1kg)</th>\n      <th>Tomato (1kg)</th>\n      <th>Banana (1kg)</th>\n      <th>Onion (1kg)</th>\n      <th>Beef Round (1kg) (or Equivalent Back Leg Red Meat)</th>\n      <th>Toyota Corolla 1.6l 97kW Comfort (Or Equivalent New Car)</th>\n      <th>Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child</th>\n      <th>International Primary School, Yearly for 1 Child</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Zurich, Switzerland</td>\n      <td>131.24</td>\n      <td>69.26</td>\n      <td>102.19</td>\n      <td>136.14</td>\n      <td>132.52</td>\n      <td>129.79</td>\n      <td>23.12</td>\n      <td>92.46</td>\n      <td>12.94</td>\n      <td>...</td>\n      <td>2.58</td>\n      <td>4.66</td>\n      <td>2.52</td>\n      <td>3.79</td>\n      <td>2.89</td>\n      <td>2.69</td>\n      <td>46.09</td>\n      <td>21449.95</td>\n      <td>2194.64</td>\n      <td>28414.08</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Beirut, Lebanon</td>\n      <td>120.47</td>\n      <td>27.76</td>\n      <td>77.01</td>\n      <td>141.33</td>\n      <td>116.95</td>\n      <td>15.40</td>\n      <td>8.98</td>\n      <td>53.91</td>\n      <td>7.19</td>\n      <td>...</td>\n      <td>0.85</td>\n      <td>3.82</td>\n      <td>1.46</td>\n      <td>1.09</td>\n      <td>1.2</td>\n      <td>0.87</td>\n      <td>11.51</td>\n      <td>18766.59</td>\n      <td>348.27</td>\n      <td>4684.61</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Oslo, Norway</td>\n      <td>102.33</td>\n      <td>46.39</td>\n      <td>76.11</td>\n      <td>97.62</td>\n      <td>111.54</td>\n      <td>85.18</td>\n      <td>18.7</td>\n      <td>80.88</td>\n      <td>11.12</td>\n      <td>...</td>\n      <td>2.02</td>\n      <td>4.28</td>\n      <td>2.43</td>\n      <td>3.05</td>\n      <td>2.21</td>\n      <td>1.61</td>\n      <td>25.58</td>\n      <td>31245.91</td>\n      <td>319.19</td>\n      <td>10981.56</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>New York, NY, United States</td>\n      <td>100.00</td>\n      <td>100.00</td>\n      <td>100.00</td>\n      <td>100.00</td>\n      <td>100.00</td>\n      <td>100.00</td>\n      <td>17.97</td>\n      <td>76.37</td>\n      <td>8.09</td>\n      <td>...</td>\n      <td>1.94</td>\n      <td>4.22</td>\n      <td>5.7</td>\n      <td>5.33</td>\n      <td>2.17</td>\n      <td>3.07</td>\n      <td>13.56</td>\n      <td>18118.42</td>\n      <td>2106.38</td>\n      <td>34441.93</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Reykjavik, Iceland</td>\n      <td>97.61</td>\n      <td>46.27</td>\n      <td>73.55</td>\n      <td>91.92</td>\n      <td>105.77</td>\n      <td>74.84</td>\n      <td>17.96</td>\n      <td>109.16</td>\n      <td>11.64</td>\n      <td>...</td>\n      <td>2.2</td>\n      <td>4.11</td>\n      <td>2.37</td>\n      <td>3.37</td>\n      <td>1.66</td>\n      <td>1.42</td>\n      <td>20.84</td>\n      <td>30138.76</td>\n      <td>245.58</td>\n      <td>6731.73</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>151</th>\n      <td>Ankara, Turkey</td>\n      <td>27.17</td>\n      <td>6.31</td>\n      <td>17.39</td>\n      <td>21.43</td>\n      <td>17.97</td>\n      <td>39.07</td>\n      <td>3.82</td>\n      <td>15.28</td>\n      <td>3.51</td>\n      <td>...</td>\n      <td>0.53</td>\n      <td>1.7</td>\n      <td>1.26</td>\n      <td>0.79</td>\n      <td>1.78</td>\n      <td>0.51</td>\n      <td>9.24</td>\n      <td>20134.24</td>\n      <td>242.55</td>\n      <td>5303.45</td>\n    </tr>\n    <tr>\n      <th>152</th>\n      <td>Hyderabad, India</td>\n      <td>26.61</td>\n      <td>6.47</td>\n      <td>17.17</td>\n      <td>29.69</td>\n      <td>18.17</td>\n      <td>51.21</td>\n      <td>1.9</td>\n      <td>8.86</td>\n      <td>3.8</td>\n      <td>...</td>\n      <td>0.57</td>\n      <td>1.17</td>\n      <td>0.65</td>\n      <td>0.44</td>\n      <td>0.57</td>\n      <td>0.33</td>\n      <td>4.16</td>\n      <td>21345.77</td>\n      <td>60.32</td>\n      <td>1715.91</td>\n    </tr>\n    <tr>\n      <th>153</th>\n      <td>Chennai, India</td>\n      <td>26.08</td>\n      <td>6.76</td>\n      <td>17.02</td>\n      <td>28.88</td>\n      <td>16.98</td>\n      <td>46.31</td>\n      <td>1.52</td>\n      <td>7.59</td>\n      <td>3.35</td>\n      <td>...</td>\n      <td>0.36</td>\n      <td>1.3</td>\n      <td>0.67</td>\n      <td>0.41</td>\n      <td>0.78</td>\n      <td>0.45</td>\n      <td>4.17</td>\n      <td>21604.75</td>\n      <td>51.12</td>\n      <td>1470.3</td>\n    </tr>\n    <tr>\n      <th>154</th>\n      <td>Ahmedabad, India</td>\n      <td>26.01</td>\n      <td>5.93</td>\n      <td>16.59</td>\n      <td>28.52</td>\n      <td>19.15</td>\n      <td>39.11</td>\n      <td>1.9</td>\n      <td>8.86</td>\n      <td>3.16</td>\n      <td>...</td>\n      <td>0.49</td>\n      <td>1.4</td>\n      <td>0.74</td>\n      <td>0.41</td>\n      <td>0.48</td>\n      <td>0.33</td>\n      <td>5.7</td>\n      <td>20809.53</td>\n      <td>51.34</td>\n      <td>1218.73</td>\n    </tr>\n    <tr>\n      <th>155</th>\n      <td>Kolkata, India</td>\n      <td>25.99</td>\n      <td>5.57</td>\n      <td>16.42</td>\n      <td>28.24</td>\n      <td>18.89</td>\n      <td>44.66</td>\n      <td>2.53</td>\n      <td>10.76</td>\n      <td>3.79</td>\n      <td>...</td>\n      <td>0.32</td>\n      <td>1.38</td>\n      <td>0.59</td>\n      <td>0.43</td>\n      <td>0.6</td>\n      <td>0.36</td>\n      <td>4.15</td>\n      <td>19667.56</td>\n      <td>37.06</td>\n      <td>1126.1</td>\n    </tr>\n  </tbody>\n</table>\n<p>156 rows × 62 columns</p>\n</div>","text/plain":"                            City  Cost of Living Index  Rent Index  \\\n0            Zurich, Switzerland                131.24       69.26   \n1                Beirut, Lebanon                120.47       27.76   \n2                   Oslo, Norway                102.33       46.39   \n3    New York, NY, United States                100.00      100.00   \n4             Reykjavik, Iceland                 97.61       46.27   \n..                           ...                   ...         ...   \n151               Ankara, Turkey                 27.17        6.31   \n152             Hyderabad, India                 26.61        6.47   \n153               Chennai, India                 26.08        6.76   \n154             Ahmedabad, India                 26.01        5.93   \n155               Kolkata, India                 25.99        5.57   \n\n     Cost of Living Plus Rent Index  Groceries Index  Restaurant Price Index  \\\n0                            102.19           136.14                  132.52   \n1                             77.01           141.33                  116.95   \n2                             76.11            97.62                  111.54   \n3                            100.00           100.00                  100.00   \n4                             73.55            91.92                  105.77   \n..                              ...              ...                     ...   \n151                           17.39            21.43                   17.97   \n152                           17.17            29.69                   18.17   \n153                           17.02            28.88                   16.98   \n154                           16.59            28.52                   19.15   \n155                           16.42            28.24                   18.89   \n\n     Local Purchasing Power Index Meal, Inexpensive Restaurant  \\\n0                          129.79                        23.12   \n1                           15.40                         8.98   \n2                           85.18                         18.7   \n3                          100.00                        17.97   \n4                           74.84                        17.96   \n..                            ...                          ...   \n151                         39.07                         3.82   \n152                         51.21                          1.9   \n153                         46.31                         1.52   \n154                         39.11                          1.9   \n155                         44.66                         2.53   \n\n    Meal for 2 People, Mid-range Restaurant, Three-course  \\\n0                                                92.46      \n1                                                53.91      \n2                                                80.88      \n3                                                76.37      \n4                                               109.16      \n..                                                 ...      \n151                                              15.28      \n152                                               8.86      \n153                                               7.59      \n154                                               8.86      \n155                                              10.76      \n\n    McMeal at McDonalds (or Equivalent Combo Meal)  ... Lettuce (1 head)  \\\n0                                            12.94  ...             2.58   \n1                                             7.19  ...             0.85   \n2                                            11.12  ...             2.02   \n3                                             8.09  ...             1.94   \n4                                            11.64  ...              2.2   \n..                                             ...  ...              ...   \n151                                           3.51  ...             0.53   \n152                                            3.8  ...             0.57   \n153                                           3.35  ...             0.36   \n154                                           3.16  ...             0.49   \n155                                           3.79  ...             0.32   \n\n    Cappuccino (regular) Rice (white), (1kg) Tomato (1kg) Banana (1kg)  \\\n0                   4.66                2.52         3.79         2.89   \n1                   3.82                1.46         1.09          1.2   \n2                   4.28                2.43         3.05         2.21   \n3                   4.22                 5.7         5.33         2.17   \n4                   4.11                2.37         3.37         1.66   \n..                   ...                 ...          ...          ...   \n151                  1.7                1.26         0.79         1.78   \n152                 1.17                0.65         0.44         0.57   \n153                  1.3                0.67         0.41         0.78   \n154                  1.4                0.74         0.41         0.48   \n155                 1.38                0.59         0.43          0.6   \n\n    Onion (1kg) Beef Round (1kg) (or Equivalent Back Leg Red Meat)  \\\n0          2.69                                              46.09   \n1          0.87                                              11.51   \n2          1.61                                              25.58   \n3          3.07                                              13.56   \n4          1.42                                              20.84   \n..          ...                                                ...   \n151        0.51                                               9.24   \n152        0.33                                               4.16   \n153        0.45                                               4.17   \n154        0.33                                                5.7   \n155        0.36                                               4.15   \n\n    Toyota Corolla 1.6l 97kW Comfort (Or Equivalent New Car)  \\\n0                                             21449.95         \n1                                             18766.59         \n2                                             31245.91         \n3                                             18118.42         \n4                                             30138.76         \n..                                                 ...         \n151                                           20134.24         \n152                                           21345.77         \n153                                           21604.75         \n154                                           20809.53         \n155                                           19667.56         \n\n    Preschool (or Kindergarten), Full Day, Private, Monthly for 1 Child  \\\n0                                              2194.64                    \n1                                               348.27                    \n2                                               319.19                    \n3                                              2106.38                    \n4                                               245.58                    \n..                                                 ...                    \n151                                             242.55                    \n152                                              60.32                    \n153                                              51.12                    \n154                                              51.34                    \n155                                              37.06                    \n\n    International Primary School, Yearly for 1 Child  \n0                                           28414.08  \n1                                            4684.61  \n2                                           10981.56  \n3                                           34441.93  \n4                                            6731.73  \n..                                               ...  \n151                                          5303.45  \n152                                          1715.91  \n153                                           1470.3  \n154                                          1218.73  \n155                                           1126.1  \n\n[156 rows x 62 columns]"},"exec_count":25,"output_type":"execute_result"}},"pos":37,"type":"cell"}
{"cell_type":"code","exec_count":26,"id":"9150ca","input":"#cleaning the data -- dropping missing and duplicate values for sanity\nmerged_costofliving.dropna(inplace = True) # dropping missing values\nmerged_costofliving.drop_duplicates(inplace = True) # dropping duplicate values here\nmerged_costofliving = merged_costofliving.reset_index(drop=True) # resetting the index\n\nlength = len(merged_costofliving.index) #save length of array of later","pos":38,"type":"cell"}
{"cell_type":"code","exec_count":27,"id":"664094","input":"import seaborn as sns","pos":43,"type":"cell"}
{"cell_type":"code","exec_count":28,"id":"f01833","input":"sns.heatmap(merged_costofliving.corr())","output":{"0":{"data":{"text/plain":"<AxesSubplot:>"},"exec_count":28,"output_type":"execute_result"},"1":{"data":{"image/png":"ca16c82e0a9b7eda3303cca1c2a09aa79b2cad66","text/plain":"<Figure size 432x288 with 2 Axes>"},"exec_count":28,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":44,"type":"cell"}
{"cell_type":"code","exec_count":29,"id":"768d8b","input":"X = merged_costofliving[\"Rent Index\"].to_numpy()\ny = merged_costofliving[\"Cost of Living Index\"].to_numpy()","pos":45,"type":"cell"}
{"cell_type":"code","exec_count":3,"id":"da7b83","input":"df = px.data.tips()\nfig = px.scatter(costofliving1, x = ('Cost of Living Plus Rent Index'), y = 'Local Purchasing Power Index',\n                 color = 'City',\n                 title = 'Cost of Living',\n                 trendline = \"ols\" , trendline_scope=\"overall\")\n\nfig.show()","output":{"0":{"data":{"iframe":"84d353ab2010e13c5e6677db8f7235f072c5f7be"},"exec_count":3,"output_type":"execute_result"}},"pos":3,"type":"cell"}
{"cell_type":"code","exec_count":30,"id":"e7ace1","input":"X.shape[0]","output":{"0":{"data":{"text/plain":"156"},"exec_count":30,"output_type":"execute_result"}},"pos":46,"type":"cell"}
{"cell_type":"code","exec_count":31,"id":"2dcb5d","input":"# Checking for Missing Data\nif X.shape[0] != y.shape[0]:\n  print(\"It looks like you have missing data. You may want to preprocess your data more with pandas to delete any rows with missing, NaN, N/A, and null values.\")\n  \nidx = np.arange(length) #shuffle our dataset indices so we don't always split the same way!\nnp.random.shuffle(idx)\n\n#split our data with 80% for training (learning) and 20% for testing.\nsplit_threshold = int(length * 0.8)\n\ntrain_idx = idx[:split_threshold]\n# Uses the remaining indices for testing\ntest_idx = idx[split_threshold:]\n\n# Generates train and test sets and formats them for training.\nx_train, y_train = X[train_idx], y[train_idx]\nx_test, y_test = X[test_idx], y[test_idx]\nx_train= x_train.reshape(-1, 1)\ny_train= y_train.reshape(-1, 1)\nx_test = x_test.reshape(-1, 1)","pos":47,"type":"cell"}
{"cell_type":"code","exec_count":32,"id":"b7f06d","input":"import matplotlib.pyplot as plt","pos":48,"type":"cell"}
{"cell_type":"code","exec_count":33,"id":"7e4c45","input":"#let's plot our split data to see how it looks!\nplt.figure(figsize=(10,5))\n\n# plot the train set \nplt.subplot(1,2,1)\nplt.scatter(x_train,y_train, c='orange')  \nplt.xlabel('x', fontsize = 20) \nplt.ylabel('y', fontsize = 20)\nplt.title('Generated Data - Train')\nplt.grid('on')\n\n# plot the test set \nplt.subplot(1,2,2)\nplt.scatter(x_test, y_test)  \nplt.xlabel('x', fontsize = 20) \nplt.ylabel('y', fontsize = 20)\nplt.title('Generated Data - Test')\nplt.grid('on')\n\nplt.show()","output":{"0":{"data":{"image/png":"d02658293e025e9ad621fec5e48e1b79250df747","text/plain":"<Figure size 720x360 with 2 Axes>"},"exec_count":33,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":49,"type":"cell"}
{"cell_type":"code","exec_count":34,"id":"de5ad4","input":"from sklearn.linear_model import LinearRegression\n#Create the model object\nlinr = LinearRegression()\n#Fit (train) the model -- this is where the ML happens!\nlinr.fit(x_train, y_train)\nprint(linr.intercept_, linr.coef_[0])","output":{"0":{"name":"stdout","output_type":"stream","text":"[29.86734674] [0.89012232]\n"}},"pos":50,"type":"cell"}
{"cell_type":"code","exec_count":35,"id":"88cadd","input":"# Predicting using SKLearn\ny_hat = linr.predict(x_test)","pos":51,"type":"cell"}
{"cell_type":"code","exec_count":36,"id":"eaffce","input":"#plotting results\nplt.figure(figsize=(10,5))\nplt.plot(x_test, y_hat, '--')\n\nplt.scatter(x_test,y_test, c='Green')  \nplt.xlabel('x', fontsize = 20) \nplt.ylabel('y', fontsize = 20)\nplt.title('Generated Data - Test')\nplt.grid('on')\nplt.show()","output":{"0":{"data":{"image/png":"fef7e3ede906589af662d3333b41cc41929f9847","text/plain":"<Figure size 720x360 with 1 Axes>"},"exec_count":36,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":52,"type":"cell"}
{"cell_type":"code","exec_count":37,"id":"20b3e9","input":"print(linr.score(x_test, y_test))","output":{"0":{"name":"stdout","output_type":"stream","text":"0.7428434349078874\n"}},"pos":53,"type":"cell"}
{"cell_type":"code","exec_count":38,"id":"33938c","input":"MAE = np.mean(abs(y_test - y_hat))\nMAE","output":{"0":{"data":{"text/plain":"24.73710808041804"},"exec_count":38,"output_type":"execute_result"}},"pos":54,"type":"cell"}
{"cell_type":"code","exec_count":39,"id":"8c4b2f","input":"X = merged_costofliving[\"Cost of Living Plus Rent Index\"].to_numpy()\ny = merged_costofliving[\"Cost of Living Index\"].to_numpy()","pos":56,"type":"cell"}
{"cell_type":"code","exec_count":4,"id":"774777","input":"df = px.data.tips()\nfig = px.scatter(costofliving1, x = ('Cost of Living Plus Rent Index'), y = 'Local Purchasing Power Index',\n                 color = 'City',\n                 title = 'Cost of Living',\n                 trendline = \"lowess\" , trendline_scope=\"overall\")\n\nfig.show()","output":{"0":{"data":{"iframe":"9eaa2847dd211150497809ef6700368f07585ba4"},"exec_count":4,"output_type":"execute_result"}},"pos":4,"type":"cell"}
{"cell_type":"code","exec_count":40,"id":"572935","input":"X.shape[0]","output":{"0":{"data":{"text/plain":"156"},"exec_count":40,"output_type":"execute_result"}},"pos":57,"type":"cell"}
{"cell_type":"code","exec_count":41,"id":"a60280","input":"# Checking for Missing Data\nif X.shape[0] != y.shape[0]:\n  print(\"It looks like you have missing data. You may want to preprocess your data more with pandas to delete any rows with missing, NaN, N/A, and null values.\")\n  \nidx = np.arange(length) #shuffle our dataset indices so we don't always split the same way!\nnp.random.shuffle(idx)\n\n#split our data with 80% for training (learning) and 20% for testing.\nsplit_threshold = int(length * 0.8)\n\ntrain_idx = idx[:split_threshold]\n# Uses the remaining indices for testing\ntest_idx = idx[split_threshold:]\n\n# Generates train and test sets and formats them for training.\nx_train, y_train = X[train_idx], y[train_idx]\nx_test, y_test = X[test_idx], y[test_idx]\nx_train= x_train.reshape(-1, 1)\ny_train= y_train.reshape(-1, 1)\nx_test = x_test.reshape(-1, 1)","pos":58,"type":"cell"}
{"cell_type":"code","exec_count":42,"id":"68bdf7","input":"#let's plot our split data to see how it looks!\nplt.figure(figsize=(10,5))\n\n# plot the train set \nplt.subplot(1,2,1)\nplt.scatter(x_train,y_train, c='orange')  \nplt.xlabel('x', fontsize = 20) \nplt.ylabel('y', fontsize = 20)\nplt.title('Generated Data - Train')\nplt.grid('on')\n\n# plot the test set \nplt.subplot(1,2,2)\nplt.scatter(x_test, y_test)  \nplt.xlabel('x', fontsize = 20) \nplt.ylabel('y', fontsize = 20)\nplt.title('Generated Data - Test')\nplt.grid('on')\n\nplt.show()","output":{"0":{"data":{"image/png":"51224d3634aadc67deb94416a67e80cc77e60356","text/plain":"<Figure size 720x360 with 2 Axes>"},"exec_count":42,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":59,"type":"cell"}
{"cell_type":"code","exec_count":43,"id":"2a02ce","input":"from sklearn.linear_model import LinearRegression\n#Create the model object\nlinr = LinearRegression()\n#Fit (train) the model -- this is where the ML happens!\nlinr.fit(x_train, y_train)\nprint(linr.intercept_, linr.coef_[0])","output":{"0":{"name":"stdout","output_type":"stream","text":"[11.13390002] [1.03341728]\n"}},"pos":60,"type":"cell"}
{"cell_type":"code","exec_count":44,"id":"dc51e4","input":"# Predicting using SKLearn\ny_hat = linr.predict(x_test)","pos":61,"type":"cell"}
{"cell_type":"code","exec_count":45,"id":"6e46db","input":"#plotting results\nplt.figure(figsize=(10,5))\nplt.plot(x_test, y_hat, '--')\n\nplt.scatter(x_test,y_test, c='Green')  \nplt.xlabel('x', fontsize = 20) \nplt.ylabel('y', fontsize = 20)\nplt.title('Generated Data - Test')\nplt.grid('on')\nplt.show()","output":{"0":{"data":{"image/png":"f11f9f267e3eb08b75b3967ae8f17b6376227d37","text/plain":"<Figure size 720x360 with 1 Axes>"},"exec_count":45,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":63,"type":"cell"}
{"cell_type":"code","exec_count":46,"id":"65a112","input":"print(linr.score(x_test, y_test))","output":{"0":{"name":"stdout","output_type":"stream","text":"0.9571797673878505\n"}},"pos":64,"type":"cell"}
{"cell_type":"code","exec_count":47,"id":"03c1a3","input":"MAE = np.mean(abs(y_test - y_hat))\nMAE","output":{"0":{"data":{"text/plain":"23.052800991678343"},"exec_count":47,"output_type":"execute_result"}},"pos":65,"type":"cell"}
{"cell_type":"code","exec_count":48,"id":"0f6f79","input":"X = merged_costofliving[\"Cost of Living Plus Rent Index\"].to_numpy()\ny = merged_costofliving[\"Cost of Living Index\"].to_numpy()","pos":67,"type":"cell"}
{"cell_type":"code","exec_count":49,"id":"94f4ad","input":"X = merged_costofliving[['Cost of Living Plus Rent Index' , 'Groceries Index']].to_numpy()","pos":68,"type":"cell"}
{"cell_type":"code","exec_count":5,"id":"86baaa","input":"df = px.data.tips()\nfig = px.scatter(costofliving1, x = ('Cost of Living Plus Rent Index'), y = 'Local Purchasing Power Index',\n                 color = 'City',\n                 title = 'Cost of Living',\n                 trendline = \"expanding\" , trendline_scope=\"overall\")\n\nfig.show()","output":{"0":{"data":{"iframe":"6339403a0f5143ee6c9b28997861c5e94a0db620"},"exec_count":5,"output_type":"execute_result"}},"pos":5,"type":"cell"}
{"cell_type":"code","exec_count":50,"id":"b0718d","input":"len(X)","output":{"0":{"data":{"text/plain":"156"},"exec_count":50,"output_type":"execute_result"}},"pos":69,"type":"cell"}
{"cell_type":"code","exec_count":51,"id":"9bb2e8","input":"# Checking for Missing Data\nif X.shape[0] != y.shape[0]:\n  print(\"It looks like you have missing data. You may want to preprocess your data more with pandas to delete any rows with missing, NaN, N/A, and null values.\")\n  \nidx = np.arange(length) #shuffle our dataset indices so we don't always split the same way!\nnp.random.shuffle(idx)\n\n#split our data with 80% for training (learning) and 20% for testing.\nsplit_threshold = int(length * 0.8)\n\ntrain_idx = idx[:split_threshold]\n# Uses the remaining indices for testing\ntest_idx = idx[split_threshold:]\n\n# Generates train and test sets and formats them for training.\nx_train, y_train = X[train_idx], y[train_idx]\nx_test, y_test = X[test_idx], y[test_idx]\n# x_train= x_train.reshape(-1, 1)\n# y_train= y_train.reshape(-1, 1)\n# x_test = x_test.reshape(-1, 1)","pos":70,"type":"cell"}
{"cell_type":"code","exec_count":52,"id":"d79521","input":"x_train.shape","output":{"0":{"data":{"text/plain":"(124, 2)"},"exec_count":52,"output_type":"execute_result"}},"pos":71,"type":"cell"}
{"cell_type":"code","exec_count":53,"id":"8eaab8","input":"y_train.shape","output":{"0":{"data":{"text/plain":"(124,)"},"exec_count":53,"output_type":"execute_result"}},"pos":72,"type":"cell"}
{"cell_type":"code","exec_count":54,"id":"3fadad","input":"x_train","output":{"0":{"data":{"text/plain":"array([[ 55.15,  64.69],\n       [ 28.25,  35.43],\n       [ 63.37,  66.77],\n       [ 25.76,  31.7 ],\n       [ 36.02,  42.93],\n       [ 32.01,  39.18],\n       [ 60.07,  64.83],\n       [ 21.78,  25.52],\n       [ 54.83,  48.24],\n       [ 61.77,  80.26],\n       [ 28.74,  41.48],\n       [ 59.81,  79.33],\n       [ 16.59,  28.52],\n       [ 25.3 ,  38.66],\n       [ 17.17,  29.69],\n       [ 24.9 ,  31.26],\n       [ 60.65,  62.83],\n       [ 21.65,  26.98],\n       [ 25.86,  30.99],\n       [ 17.98,  28.86],\n       [ 24.76,  32.34],\n       [ 54.3 ,  61.26],\n       [ 56.48,  55.14],\n       [ 21.25,  26.67],\n       [ 24.82,  29.73],\n       [ 33.51,  46.14],\n       [ 19.02,  31.11],\n       [ 69.09,  64.45],\n       [ 34.71,  43.85],\n       [ 32.38,  34.81],\n       [ 25.17,  33.97],\n       [ 55.15,  62.72],\n       [ 24.36,  39.57],\n       [ 59.56,  63.61],\n       [ 73.79,  49.79],\n       [100.72,  97.05],\n       [ 62.36,  67.33],\n       [ 24.73,  29.45],\n       [ 39.15,  50.2 ],\n       [ 56.57,  76.45],\n       [ 41.4 ,  49.44],\n       [ 57.66,  98.28],\n       [ 29.27,  36.68],\n       [ 57.02,  58.44],\n       [ 31.28,  35.54],\n       [ 23.69,  32.6 ],\n       [ 22.71,  34.07],\n       [ 28.63,  33.89],\n       [ 28.26,  33.5 ],\n       [ 50.19,  70.13],\n       [ 67.68,  83.65],\n       [ 21.22,  23.77],\n       [ 18.11,  28.05],\n       [ 28.12,  32.33],\n       [ 42.18,  40.29],\n       [ 33.95,  36.84],\n       [ 18.06,  23.44],\n       [ 38.63,  42.71],\n       [ 71.41,  79.65],\n       [ 73.55,  91.92],\n       [ 18.5 ,  29.25],\n       [ 58.9 ,  77.78],\n       [ 52.56,  61.71],\n       [ 39.7 ,  45.19],\n       [ 55.48,  57.23],\n       [ 52.32,  68.2 ],\n       [ 54.71,  56.41],\n       [ 18.22,  27.33],\n       [ 26.69,  31.45],\n       [102.19, 136.14],\n       [ 76.98,  75.94],\n       [ 49.48,  57.06],\n       [ 37.06,  41.99],\n       [ 67.17,  79.84],\n       [ 17.39,  21.43],\n       [ 25.96,  34.1 ],\n       [ 63.93,  75.19],\n       [ 27.47,  41.08],\n       [ 30.37,  35.  ],\n       [ 29.42,  41.78],\n       [ 44.67,  47.4 ],\n       [ 46.5 ,  80.24],\n       [ 53.46,  65.03],\n       [ 46.32,  49.14],\n       [ 19.01,  31.14],\n       [ 17.02,  28.88],\n       [ 67.77,  73.3 ],\n       [ 77.83,  84.72],\n       [ 59.26,  64.14],\n       [ 23.08,  28.51],\n       [ 33.46,  39.85],\n       [ 37.4 ,  43.85],\n       [ 26.72,  32.13],\n       [ 32.7 ,  41.65],\n       [ 20.59,  28.76],\n       [ 28.31,  33.58],\n       [ 29.97,  36.18],\n       [ 57.54,  70.8 ],\n       [ 34.29,  38.97],\n       [ 20.68,  28.71],\n       [ 63.28,  65.53],\n       [100.  , 100.  ],\n       [ 58.96,  69.7 ],\n       [ 82.09,  85.4 ],\n       [ 27.78,  30.1 ],\n       [ 20.7 ,  26.62],\n       [ 62.54,  70.58],\n       [ 64.78,  74.46],\n       [ 54.22,  61.14],\n       [ 72.33,  73.82],\n       [ 25.42,  32.25],\n       [ 76.11,  97.62],\n       [ 24.84,  34.5 ],\n       [ 24.7 ,  34.27],\n       [ 30.26,  33.13],\n       [ 27.42,  38.  ],\n       [ 41.27,  55.82],\n       [ 18.93,  28.83],\n       [ 39.73,  46.99],\n       [ 57.4 ,  66.78],\n       [ 25.18,  33.18],\n       [ 65.5 ,  94.94],\n       [ 70.1 ,  71.49],\n       [ 27.62,  37.47]])"},"exec_count":54,"output_type":"execute_result"}},"pos":73,"type":"cell"}
{"cell_type":"code","exec_count":55,"id":"af44cc","input":"list1, list2 = [], []\nfor ele in x_train:\n    print(ele)\n    list1.append(ele[0])\n    list2.append(ele[1])\n    \n# print(list1, list2)","output":{"0":{"name":"stdout","output_type":"stream","text":"[55.15 64.69]\n[28.25 35.43]\n[63.37 66.77]\n[25.76 31.7 ]\n[36.02 42.93]\n[32.01 39.18]\n[60.07 64.83]\n[21.78 25.52]\n[54.83 48.24]\n[61.77 80.26]\n[28.74 41.48]\n[59.81 79.33]\n[16.59 28.52]\n[25.3  38.66]\n[17.17 29.69]\n[24.9  31.26]\n[60.65 62.83]\n[21.65 26.98]\n[25.86 30.99]\n[17.98 28.86]\n[24.76 32.34]\n[54.3  61.26]\n[56.48 55.14]\n[21.25 26.67]\n[24.82 29.73]\n[33.51 46.14]\n[19.02 31.11]\n[69.09 64.45]\n[34.71 43.85]\n[32.38 34.81]\n[25.17 33.97]\n[55.15 62.72]\n[24.36 39.57]\n[59.56 63.61]\n[73.79 49.79]\n[100.72  97.05]\n[62.36 67.33]\n[24.73 29.45]\n[39.15 50.2 ]\n[56.57 76.45]\n[41.4  49.44]\n[57.66 98.28]\n[29.27 36.68]\n[57.02 58.44]\n[31.28 35.54]\n[23.69 32.6 ]\n[22.71 34.07]\n[28.63 33.89]\n[28.26 33.5 ]\n[50.19 70.13]\n[67.68 83.65]\n[21.22 23.77]\n[18.11 28.05]\n[28.12 32.33]\n[42.18 40.29]\n[33.95 36.84]\n[18.06 23.44]\n[38.63 42.71]\n[71.41 79.65]\n[73.55 91.92]\n[18.5  29.25]\n[58.9  77.78]\n[52.56 61.71]\n[39.7  45.19]\n[55.48 57.23]\n[52.32 68.2 ]\n[54.71 56.41]\n[18.22 27.33]\n[26.69 31.45]\n[102.19 136.14]\n[76.98 75.94]\n[49.48 57.06]\n[37.06 41.99]\n[67.17 79.84]\n[17.39 21.43]\n[25.96 34.1 ]\n[63.93 75.19]\n[27.47 41.08]\n[30.37 35.  ]\n[29.42 41.78]\n[44.67 47.4 ]\n[46.5  80.24]\n[53.46 65.03]\n[46.32 49.14]\n[19.01 31.14]\n[17.02 28.88]\n[67.77 73.3 ]\n[77.83 84.72]\n[59.26 64.14]\n[23.08 28.51]\n[33.46 39.85]\n[37.4  43.85]\n[26.72 32.13]\n[32.7  41.65]\n[20.59 28.76]\n[28.31 33.58]\n[29.97 36.18]\n[57.54 70.8 ]\n[34.29 38.97]\n[20.68 28.71]\n[63.28 65.53]\n[100. 100.]\n[58.96 69.7 ]\n[82.09 85.4 ]\n[27.78 30.1 ]\n[20.7  26.62]\n[62.54 70.58]\n[64.78 74.46]\n[54.22 61.14]\n[72.33 73.82]\n[25.42 32.25]\n[76.11 97.62]\n[24.84 34.5 ]\n[24.7  34.27]\n[30.26 33.13]\n[27.42 38.  ]\n[41.27 55.82]\n[18.93 28.83]\n[39.73 46.99]\n[57.4  66.78]\n[25.18 33.18]\n[65.5  94.94]\n[70.1  71.49]\n[27.62 37.47]\n"}},"pos":74,"type":"cell"}
{"cell_type":"code","exec_count":56,"id":"896f6a","input":"#let's plot our split data to see how it looks!\nplt.figure(figsize=(10,5))\n\n# plot the train set \nplt.subplot(1,2,1)\nplt.scatter(x_train[],y_train, c='orange')  \nplt.xlabel('x', fontsize = 20) \nplt.ylabel('y', fontsize = 20)\nplt.title('Generated Data - Train')\nplt.grid('on')\n\n# plot the test set \nplt.subplot(1,2,2)\nplt.scatter(x_test, y_test)  \nplt.xlabel('x', fontsize = 20) \nplt.ylabel('y', fontsize = 20)\nplt.title('Generated Data - Test')\nplt.grid('on')\n\nplt.show()","output":{"0":{"ename":"SyntaxError","evalue":"invalid syntax (1467992990.py, line 6)","output_type":"error","traceback":["\u001b[0;36m  Input \u001b[0;32mIn [56]\u001b[0;36m\u001b[0m\n\u001b[0;31m    plt.scatter(x_train[],y_train, c='orange')\u001b[0m\n\u001b[0m                        ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}},"pos":75,"type":"cell"}
{"cell_type":"code","exec_count":57,"id":"fd7098","input":"from sklearn.linear_model import LinearRegression\n#Create the model object\nlinr = LinearRegression()\n#Fit (train) the model -- this is where the ML happens!\nlinr.fit(x_train, y_train)\nprint(linr.intercept_, linr.coef_[0])","output":{"0":{"name":"stdout","output_type":"stream","text":"8.001849340523876 0.5276556615415219\n"}},"pos":76,"type":"cell"}
{"cell_type":"code","exec_count":58,"id":"4165c5","input":"# Predicting using SKLearn\ny_hat = linr.predict(x_test)","pos":77,"type":"cell"}
{"cell_type":"code","exec_count":59,"id":"bbe90c","input":"#plotting results\nplt.figure(figsize=(10,5))\nplt.plot(x_test, y_hat, '--')\n\nplt.scatter(x_test,y_test, c='Green')  \nplt.xlabel('x', fontsize = 20) \nplt.ylabel('y', fontsize = 20)\nplt.title('Generated Data - Test')\nplt.grid('on')\nplt.show()","output":{"0":{"ename":"ValueError","evalue":"x and y must be the same size","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","Input \u001b[0;32mIn [59]\u001b[0m, in \u001b[0;36m<cell line: 5>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      2\u001b[0m plt\u001b[38;5;241m.\u001b[39mfigure(figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m10\u001b[39m,\u001b[38;5;241m5\u001b[39m))\n\u001b[1;32m      3\u001b[0m plt\u001b[38;5;241m.\u001b[39mplot(x_test, y_hat, \u001b[38;5;124m'\u001b[39m\u001b[38;5;124m--\u001b[39m\u001b[38;5;124m'\u001b[39m)\n\u001b[0;32m----> 5\u001b[0m \u001b[43mplt\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mscatter\u001b[49m\u001b[43m(\u001b[49m\u001b[43mx_test\u001b[49m\u001b[43m,\u001b[49m\u001b[43my_test\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mc\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mGreen\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m)\u001b[49m  \n\u001b[1;32m      6\u001b[0m plt\u001b[38;5;241m.\u001b[39mxlabel(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mx\u001b[39m\u001b[38;5;124m'\u001b[39m, fontsize \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m20\u001b[39m) \n\u001b[1;32m      7\u001b[0m plt\u001b[38;5;241m.\u001b[39mylabel(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124my\u001b[39m\u001b[38;5;124m'\u001b[39m, fontsize \u001b[38;5;241m=\u001b[39m \u001b[38;5;241m20\u001b[39m)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/matplotlib/pyplot.py:2807\u001b[0m, in \u001b[0;36mscatter\u001b[0;34m(x, y, s, c, marker, cmap, norm, vmin, vmax, alpha, linewidths, edgecolors, plotnonfinite, data, **kwargs)\u001b[0m\n\u001b[1;32m   2802\u001b[0m \u001b[38;5;129m@_copy_docstring_and_deprecators\u001b[39m(Axes\u001b[38;5;241m.\u001b[39mscatter)\n\u001b[1;32m   2803\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mscatter\u001b[39m(\n\u001b[1;32m   2804\u001b[0m         x, y, s\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, c\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, marker\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, cmap\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, norm\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m,\n\u001b[1;32m   2805\u001b[0m         vmin\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, vmax\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, alpha\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, linewidths\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, \u001b[38;5;241m*\u001b[39m,\n\u001b[1;32m   2806\u001b[0m         edgecolors\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, plotnonfinite\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mFalse\u001b[39;00m, data\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[0;32m-> 2807\u001b[0m     __ret \u001b[38;5;241m=\u001b[39m \u001b[43mgca\u001b[49m\u001b[43m(\u001b[49m\u001b[43m)\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mscatter\u001b[49m\u001b[43m(\u001b[49m\n\u001b[1;32m   2808\u001b[0m \u001b[43m        \u001b[49m\u001b[43mx\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43my\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43ms\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43ms\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mc\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mc\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmarker\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mmarker\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcmap\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcmap\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mnorm\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mnorm\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2809\u001b[0m \u001b[43m        \u001b[49m\u001b[43mvmin\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mvmin\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvmax\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mvmax\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43malpha\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43malpha\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mlinewidths\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mlinewidths\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2810\u001b[0m \u001b[43m        \u001b[49m\u001b[43medgecolors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43medgecolors\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mplotnonfinite\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mplotnonfinite\u001b[49m\u001b[43m,\u001b[49m\n\u001b[1;32m   2811\u001b[0m \u001b[43m        \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43m{\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mdata\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m:\u001b[49m\u001b[43m \u001b[49m\u001b[43mdata\u001b[49m\u001b[43m}\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mif\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43mdata\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;129;43;01mis\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;129;43;01mnot\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;28;43;01mNone\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[38;5;28;43;01melse\u001b[39;49;00m\u001b[43m \u001b[49m\u001b[43m{\u001b[49m\u001b[43m}\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   2812\u001b[0m     sci(__ret)\n\u001b[1;32m   2813\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m __ret\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/matplotlib/__init__.py:1412\u001b[0m, in \u001b[0;36m_preprocess_data.<locals>.inner\u001b[0;34m(ax, data, *args, **kwargs)\u001b[0m\n\u001b[1;32m   1409\u001b[0m \u001b[38;5;129m@functools\u001b[39m\u001b[38;5;241m.\u001b[39mwraps(func)\n\u001b[1;32m   1410\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21minner\u001b[39m(ax, \u001b[38;5;241m*\u001b[39margs, data\u001b[38;5;241m=\u001b[39m\u001b[38;5;28;01mNone\u001b[39;00m, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs):\n\u001b[1;32m   1411\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m data \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m-> 1412\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[43max\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;28;43mmap\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43msanitize_sequence\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43margs\u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1414\u001b[0m     bound \u001b[38;5;241m=\u001b[39m new_sig\u001b[38;5;241m.\u001b[39mbind(ax, \u001b[38;5;241m*\u001b[39margs, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[1;32m   1415\u001b[0m     auto_label \u001b[38;5;241m=\u001b[39m (bound\u001b[38;5;241m.\u001b[39marguments\u001b[38;5;241m.\u001b[39mget(label_namer)\n\u001b[1;32m   1416\u001b[0m                   \u001b[38;5;129;01mor\u001b[39;00m bound\u001b[38;5;241m.\u001b[39mkwargs\u001b[38;5;241m.\u001b[39mget(label_namer))\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/matplotlib/axes/_axes.py:4369\u001b[0m, in \u001b[0;36mAxes.scatter\u001b[0;34m(self, x, y, s, c, marker, cmap, norm, vmin, vmax, alpha, linewidths, edgecolors, plotnonfinite, **kwargs)\u001b[0m\n\u001b[1;32m   4367\u001b[0m y \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39mma\u001b[38;5;241m.\u001b[39mravel(y)\n\u001b[1;32m   4368\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m x\u001b[38;5;241m.\u001b[39msize \u001b[38;5;241m!=\u001b[39m y\u001b[38;5;241m.\u001b[39msize:\n\u001b[0;32m-> 4369\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mx and y must be the same size\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m   4371\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m s \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[1;32m   4372\u001b[0m     s \u001b[38;5;241m=\u001b[39m (\u001b[38;5;241m20\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m rcParams[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124m_internal.classic_mode\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;28;01melse\u001b[39;00m\n\u001b[1;32m   4373\u001b[0m          rcParams[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mlines.markersize\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39m \u001b[38;5;241m2.0\u001b[39m)\n","\u001b[0;31mValueError\u001b[0m: x and y must be the same size"]},"1":{"data":{"image/png":"dd9a71409c1817acb909ba96a3cd5154a7fd169e","text/plain":"<Figure size 720x360 with 1 Axes>"},"exec_count":59,"metadata":{"needs_background":"light"},"output_type":"execute_result"}},"pos":78,"type":"cell"}
{"cell_type":"code","exec_count":6,"id":"31f888","input":"fig = px.scatter(costofliving1, x='Cost of Living Index', y='Local Purchasing Power Index', trendline=\"lowess\")","pos":10,"type":"cell"}
{"cell_type":"code","exec_count":60,"id":"9acfa0","input":"print(linr.score(x_test, y_test))","output":{"0":{"name":"stdout","output_type":"stream","text":"0.9878662586971877\n"}},"pos":79,"type":"cell"}
{"cell_type":"code","exec_count":61,"id":"156e7d","input":"MAE = np.mean(abs(y_test - y_hat))\nMAE","output":{"0":{"data":{"text/plain":"2.2219204908554553"},"exec_count":61,"output_type":"execute_result"}},"pos":80,"type":"cell"}
{"cell_type":"code","exec_count":63,"id":"8506f9","input":"merged_costofliving.shape","output":{"0":{"data":{"text/plain":"(156, 62)"},"exec_count":63,"output_type":"execute_result"}},"pos":39,"type":"cell"}
{"cell_type":"code","exec_count":66,"id":"cffd10","input":"merged_costofliving_mod1 = merged_costofliving.drop('Lettuce (1 head)', axis = 'columns')","pos":40,"type":"cell"}
{"cell_type":"code","exec_count":67,"id":"074e5b","input":"merged_costofliving_mod2 = merged_costofliving_mod1[~merged_costofliving_mod1['City']].astype(float)","output":{"0":{"ename":"ValueError","evalue":"could not convert string to float: 'Zurich, Switzerland'","output_type":"error","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mValueError\u001b[0m                                Traceback (most recent call last)","Input \u001b[0;32mIn [67]\u001b[0m, in \u001b[0;36m<cell line: 1>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0m merged_costofliving_mod2 \u001b[38;5;241m=\u001b[39m \u001b[43mmerged_costofliving_mod1\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mastype\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mfloat\u001b[39;49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/generic.py:5912\u001b[0m, in \u001b[0;36mNDFrame.astype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   5905\u001b[0m     results \u001b[38;5;241m=\u001b[39m [\n\u001b[1;32m   5906\u001b[0m         \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39miloc[:, i]\u001b[38;5;241m.\u001b[39mastype(dtype, copy\u001b[38;5;241m=\u001b[39mcopy)\n\u001b[1;32m   5907\u001b[0m         \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m \u001b[38;5;28mrange\u001b[39m(\u001b[38;5;28mlen\u001b[39m(\u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mcolumns))\n\u001b[1;32m   5908\u001b[0m     ]\n\u001b[1;32m   5910\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m   5911\u001b[0m     \u001b[38;5;66;03m# else, only a single dtype is given\u001b[39;00m\n\u001b[0;32m-> 5912\u001b[0m     new_data \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_mgr\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mastype\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdtype\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   5913\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_constructor(new_data)\u001b[38;5;241m.\u001b[39m__finalize__(\u001b[38;5;28mself\u001b[39m, method\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mastype\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m   5915\u001b[0m \u001b[38;5;66;03m# GH 33113: handle empty frame or series\u001b[39;00m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/internals/managers.py:419\u001b[0m, in \u001b[0;36mBaseBlockManager.astype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    418\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21mastype\u001b[39m(\u001b[38;5;28mself\u001b[39m: T, dtype, copy: \u001b[38;5;28mbool\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;01mFalse\u001b[39;00m, errors: \u001b[38;5;28mstr\u001b[39m \u001b[38;5;241m=\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mraise\u001b[39m\u001b[38;5;124m\"\u001b[39m) \u001b[38;5;241m-\u001b[39m\u001b[38;5;241m>\u001b[39m T:\n\u001b[0;32m--> 419\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mapply\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[38;5;124;43mastype\u001b[39;49m\u001b[38;5;124;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/internals/managers.py:304\u001b[0m, in \u001b[0;36mBaseBlockManager.apply\u001b[0;34m(self, f, align_keys, ignore_failures, **kwargs)\u001b[0m\n\u001b[1;32m    302\u001b[0m         applied \u001b[38;5;241m=\u001b[39m b\u001b[38;5;241m.\u001b[39mapply(f, \u001b[38;5;241m*\u001b[39m\u001b[38;5;241m*\u001b[39mkwargs)\n\u001b[1;32m    303\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m--> 304\u001b[0m         applied \u001b[38;5;241m=\u001b[39m \u001b[38;5;28;43mgetattr\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mb\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mf\u001b[49m\u001b[43m)\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[38;5;241;43m*\u001b[39;49m\u001b[43mkwargs\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    305\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m (\u001b[38;5;167;01mTypeError\u001b[39;00m, \u001b[38;5;167;01mNotImplementedError\u001b[39;00m):\n\u001b[1;32m    306\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m ignore_failures:\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/internals/blocks.py:580\u001b[0m, in \u001b[0;36mBlock.astype\u001b[0;34m(self, dtype, copy, errors)\u001b[0m\n\u001b[1;32m    562\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    563\u001b[0m \u001b[38;5;124;03mCoerce to the new dtype.\u001b[39;00m\n\u001b[1;32m    564\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    576\u001b[0m \u001b[38;5;124;03mBlock\u001b[39;00m\n\u001b[1;32m    577\u001b[0m \u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    578\u001b[0m values \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mvalues\n\u001b[0;32m--> 580\u001b[0m new_values \u001b[38;5;241m=\u001b[39m \u001b[43mastype_array_safe\u001b[49m\u001b[43m(\u001b[49m\u001b[43mvalues\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43merrors\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43merrors\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    582\u001b[0m new_values \u001b[38;5;241m=\u001b[39m maybe_coerce_values(new_values)\n\u001b[1;32m    583\u001b[0m newb \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39mmake_block(new_values)\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/dtypes/cast.py:1292\u001b[0m, in \u001b[0;36mastype_array_safe\u001b[0;34m(values, dtype, copy, errors)\u001b[0m\n\u001b[1;32m   1289\u001b[0m     dtype \u001b[38;5;241m=\u001b[39m dtype\u001b[38;5;241m.\u001b[39mnumpy_dtype\n\u001b[1;32m   1291\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m-> 1292\u001b[0m     new_values \u001b[38;5;241m=\u001b[39m \u001b[43mastype_array\u001b[49m\u001b[43m(\u001b[49m\u001b[43mvalues\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1293\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m (\u001b[38;5;167;01mValueError\u001b[39;00m, \u001b[38;5;167;01mTypeError\u001b[39;00m):\n\u001b[1;32m   1294\u001b[0m     \u001b[38;5;66;03m# e.g. astype_nansafe can fail on object-dtype of strings\u001b[39;00m\n\u001b[1;32m   1295\u001b[0m     \u001b[38;5;66;03m#  trying to convert to float\u001b[39;00m\n\u001b[1;32m   1296\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m errors \u001b[38;5;241m==\u001b[39m \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mignore\u001b[39m\u001b[38;5;124m\"\u001b[39m:\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/dtypes/cast.py:1237\u001b[0m, in \u001b[0;36mastype_array\u001b[0;34m(values, dtype, copy)\u001b[0m\n\u001b[1;32m   1234\u001b[0m     values \u001b[38;5;241m=\u001b[39m values\u001b[38;5;241m.\u001b[39mastype(dtype, copy\u001b[38;5;241m=\u001b[39mcopy)\n\u001b[1;32m   1236\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[0;32m-> 1237\u001b[0m     values \u001b[38;5;241m=\u001b[39m \u001b[43mastype_nansafe\u001b[49m\u001b[43m(\u001b[49m\u001b[43mvalues\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1239\u001b[0m \u001b[38;5;66;03m# in pandas we don't store numpy str dtypes, so convert to object\u001b[39;00m\n\u001b[1;32m   1240\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(dtype, np\u001b[38;5;241m.\u001b[39mdtype) \u001b[38;5;129;01mand\u001b[39;00m \u001b[38;5;28missubclass\u001b[39m(values\u001b[38;5;241m.\u001b[39mdtype\u001b[38;5;241m.\u001b[39mtype, \u001b[38;5;28mstr\u001b[39m):\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/dtypes/cast.py:1098\u001b[0m, in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1096\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m arr\u001b[38;5;241m.\u001b[39mndim \u001b[38;5;241m>\u001b[39m \u001b[38;5;241m1\u001b[39m:\n\u001b[1;32m   1097\u001b[0m     flat \u001b[38;5;241m=\u001b[39m arr\u001b[38;5;241m.\u001b[39mravel()\n\u001b[0;32m-> 1098\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[43mastype_nansafe\u001b[49m\u001b[43m(\u001b[49m\u001b[43mflat\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mcopy\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mskipna\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[43mskipna\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1099\u001b[0m     \u001b[38;5;66;03m# error: Item \"ExtensionArray\" of \"Union[ExtensionArray, ndarray]\" has no\u001b[39;00m\n\u001b[1;32m   1100\u001b[0m     \u001b[38;5;66;03m# attribute \"reshape\"\u001b[39;00m\n\u001b[1;32m   1101\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m result\u001b[38;5;241m.\u001b[39mreshape(arr\u001b[38;5;241m.\u001b[39mshape)  \u001b[38;5;66;03m# type: ignore[union-attr]\u001b[39;00m\n","File \u001b[0;32m~/miniconda3/envs/ds_env/lib/python3.8/site-packages/pandas/core/dtypes/cast.py:1181\u001b[0m, in \u001b[0;36mastype_nansafe\u001b[0;34m(arr, dtype, copy, skipna)\u001b[0m\n\u001b[1;32m   1177\u001b[0m     \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(msg)\n\u001b[1;32m   1179\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m copy \u001b[38;5;129;01mor\u001b[39;00m is_object_dtype(arr\u001b[38;5;241m.\u001b[39mdtype) \u001b[38;5;129;01mor\u001b[39;00m is_object_dtype(dtype):\n\u001b[1;32m   1180\u001b[0m     \u001b[38;5;66;03m# Explicit copy, or required since NumPy can't view from / to object.\u001b[39;00m\n\u001b[0;32m-> 1181\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43marr\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mastype\u001b[49m\u001b[43m(\u001b[49m\u001b[43mdtype\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcopy\u001b[49m\u001b[38;5;241;43m=\u001b[39;49m\u001b[38;5;28;43;01mTrue\u001b[39;49;00m\u001b[43m)\u001b[49m\n\u001b[1;32m   1183\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m arr\u001b[38;5;241m.\u001b[39mastype(dtype, copy\u001b[38;5;241m=\u001b[39mcopy)\n","\u001b[0;31mValueError\u001b[0m: could not convert string to float: 'Zurich, Switzerland'"]}},"pos":42,"type":"cell"}
{"cell_type":"code","exec_count":7,"id":"589ee1","input":"fig = px.box(costofliving1, x=\"Cost of Living Index\", y=\"Local Purchasing Power Index\", color=\"City\", points='all')\nfig.show()","output":{"0":{"data":{"iframe":"64d72019ede421c350ba26b279a12f97b068cbe0"},"exec_count":7,"output_type":"execute_result"}},"pos":11,"type":"cell"}
{"cell_type":"code","exec_count":77,"id":"e9f724","input":"prep_df = merged_costofliving_mod1.drop(\"City\", axis='columns')\nmerged_costofliving_mod2 = pd.concat([merged_costofliving_mod1, prep_df.astype(float)], axis = 'columns')\nmerged_costofliving_mod2.shape","output":{"0":{"data":{"text/plain":"(156, 121)"},"exec_count":77,"output_type":"execute_result"}},"pos":41,"type":"cell"}
{"cell_type":"code","exec_count":8,"id":"d3b255","input":"costofliving2","output":{"0":{"data":{"text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Unnamed: 0</th>\n      <th>Saint Petersburg, Russia</th>\n      <th>Istanbul, Turkey</th>\n      <th>Izmir, Turkey</th>\n      <th>Helsinki, Finland</th>\n      <th>Chisinau, Moldova</th>\n      <th>Milan, Italy</th>\n      <th>Cairo, Egypt</th>\n      <th>Banja Luka, Bosnia And Herzegovina</th>\n      <th>Baku, Azerbaijan</th>\n      <th>...</th>\n      <th>Lviv, Ukraine</th>\n      <th>Novosibirsk, Russia</th>\n      <th>Bursa, Turkey</th>\n      <th>Brussels, Belgium</th>\n      <th>Jerusalem, Israel</th>\n      <th>Melbourne, Australia</th>\n      <th>Perth, Australia</th>\n      <th>Sydney, Australia</th>\n      <th>Alexandria, Egypt</th>\n      <th>Quito, Ecuador</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Meal, Inexpensive Restaurant</td>\n      <td>7.34</td>\n      <td>4.58</td>\n      <td>3.06</td>\n      <td>12.00</td>\n      <td>4.67</td>\n      <td>15.00</td>\n      <td>3.38</td>\n      <td>3.58</td>\n      <td>5.27</td>\n      <td>...</td>\n      <td>3.75</td>\n      <td>5.72</td>\n      <td>3.82</td>\n      <td>15.00</td>\n      <td>15.56</td>\n      <td>10.22</td>\n      <td>12.43</td>\n      <td>11.81</td>\n      <td>2.81</td>\n      <td>3.59</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Meal for 2 People, Mid-range Restaurant, Three...</td>\n      <td>29.35</td>\n      <td>15.28</td>\n      <td>12.22</td>\n      <td>65.00</td>\n      <td>20.74</td>\n      <td>60.00</td>\n      <td>17.48</td>\n      <td>22.99</td>\n      <td>23.73</td>\n      <td>...</td>\n      <td>18.76</td>\n      <td>22.01</td>\n      <td>11.47</td>\n      <td>60.00</td>\n      <td>62.24</td>\n      <td>49.54</td>\n      <td>56.55</td>\n      <td>54.37</td>\n      <td>14.06</td>\n      <td>31.45</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>McMeal at McDonalds (or Equivalent Combo Meal)</td>\n      <td>4.40</td>\n      <td>3.82</td>\n      <td>3.06</td>\n      <td>8.00</td>\n      <td>4.15</td>\n      <td>8.00</td>\n      <td>4.51</td>\n      <td>3.58</td>\n      <td>4.22</td>\n      <td>...</td>\n      <td>3.56</td>\n      <td>3.67</td>\n      <td>3.06</td>\n      <td>8.20</td>\n      <td>12.97</td>\n      <td>7.12</td>\n      <td>7.32</td>\n      <td>7.15</td>\n      <td>3.38</td>\n      <td>5.39</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Domestic Beer (0.5 liter draught)</td>\n      <td>2.20</td>\n      <td>3.06</td>\n      <td>2.29</td>\n      <td>6.50</td>\n      <td>1.04</td>\n      <td>5.00</td>\n      <td>1.69</td>\n      <td>1.02</td>\n      <td>0.84</td>\n      <td>...</td>\n      <td>1.50</td>\n      <td>1.10</td>\n      <td>2.37</td>\n      <td>4.00</td>\n      <td>7.26</td>\n      <td>5.57</td>\n      <td>5.90</td>\n      <td>4.97</td>\n      <td>1.69</td>\n      <td>1.35</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Imported Beer (0.33 liter bottle)</td>\n      <td>2.20</td>\n      <td>3.06</td>\n      <td>2.75</td>\n      <td>6.75</td>\n      <td>1.43</td>\n      <td>5.00</td>\n      <td>2.82</td>\n      <td>1.53</td>\n      <td>2.11</td>\n      <td>...</td>\n      <td>1.50</td>\n      <td>2.20</td>\n      <td>3.06</td>\n      <td>4.00</td>\n      <td>7.26</td>\n      <td>5.57</td>\n      <td>5.59</td>\n      <td>4.97</td>\n      <td>2.81</td>\n      <td>2.70</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Coke/Pepsi (0.33 liter bottle)</td>\n      <td>0.76</td>\n      <td>0.64</td>\n      <td>0.61</td>\n      <td>2.66</td>\n      <td>0.64</td>\n      <td>2.49</td>\n      <td>0.29</td>\n      <td>1.18</td>\n      <td>0.37</td>\n      <td>...</td>\n      <td>0.48</td>\n      <td>0.69</td>\n      <td>0.70</td>\n      <td>2.47</td>\n      <td>2.07</td>\n      <td>1.91</td>\n      <td>1.79</td>\n      <td>1.99</td>\n      <td>0.32</td>\n      <td>0.71</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Water (0.33 liter bottle)</td>\n      <td>0.53</td>\n      <td>0.24</td>\n      <td>0.22</td>\n      <td>1.89</td>\n      <td>0.44</td>\n      <td>1.12</td>\n      <td>0.18</td>\n      <td>0.74</td>\n      <td>0.21</td>\n      <td>...</td>\n      <td>0.37</td>\n      <td>0.52</td>\n      <td>0.23</td>\n      <td>2.07</td>\n      <td>1.71</td>\n      <td>1.70</td>\n      <td>1.62</td>\n      <td>1.68</td>\n      <td>0.19</td>\n      <td>0.47</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Milk (regular), (1 liter)</td>\n      <td>0.98</td>\n      <td>0.71</td>\n      <td>0.65</td>\n      <td>0.96</td>\n      <td>0.68</td>\n      <td>1.21</td>\n      <td>0.84</td>\n      <td>0.69</td>\n      <td>0.83</td>\n      <td>...</td>\n      <td>0.85</td>\n      <td>0.85</td>\n      <td>0.69</td>\n      <td>0.97</td>\n      <td>1.43</td>\n      <td>0.90</td>\n      <td>1.03</td>\n      <td>0.90</td>\n      <td>0.81</td>\n      <td>0.87</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Loaf of Fresh White Bread (500g)</td>\n      <td>0.71</td>\n      <td>0.36</td>\n      <td>0.38</td>\n      <td>2.27</td>\n      <td>0.33</td>\n      <td>1.94</td>\n      <td>0.51</td>\n      <td>0.63</td>\n      <td>0.26</td>\n      <td>...</td>\n      <td>0.46</td>\n      <td>0.49</td>\n      <td>0.42</td>\n      <td>1.64</td>\n      <td>1.54</td>\n      <td>1.88</td>\n      <td>1.76</td>\n      <td>1.85</td>\n      <td>0.51</td>\n      <td>1.35</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Eggs (regular) (12)</td>\n      <td>1.18</td>\n      <td>1.62</td>\n      <td>1.51</td>\n      <td>2.02</td>\n      <td>1.11</td>\n      <td>2.87</td>\n      <td>1.04</td>\n      <td>1.47</td>\n      <td>1.03</td>\n      <td>...</td>\n      <td>1.21</td>\n      <td>1.00</td>\n      <td>1.63</td>\n      <td>2.65</td>\n      <td>3.32</td>\n      <td>2.85</td>\n      <td>2.59</td>\n      <td>2.79</td>\n      <td>1.02</td>\n      <td>1.59</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Local Cheese (1kg)</td>\n      <td>7.60</td>\n      <td>5.32</td>\n      <td>4.97</td>\n      <td>6.87</td>\n      <td>5.79</td>\n      <td>13.54</td>\n      <td>3.16</td>\n      <td>4.76</td>\n      <td>3.54</td>\n      <td>...</td>\n      <td>5.59</td>\n      <td>7.30</td>\n      <td>5.93</td>\n      <td>13.14</td>\n      <td>10.63</td>\n      <td>6.12</td>\n      <td>6.52</td>\n      <td>7.68</td>\n      <td>3.68</td>\n      <td>5.47</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Water (1.5 liter bottle)</td>\n      <td>0.63</td>\n      <td>0.33</td>\n      <td>0.29</td>\n      <td>1.54</td>\n      <td>0.59</td>\n      <td>0.40</td>\n      <td>0.29</td>\n      <td>0.48</td>\n      <td>0.43</td>\n      <td>...</td>\n      <td>0.46</td>\n      <td>0.50</td>\n      <td>0.29</td>\n      <td>0.94</td>\n      <td>1.50</td>\n      <td>1.28</td>\n      <td>1.68</td>\n      <td>1.29</td>\n      <td>0.26</td>\n      <td>0.93</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Bottle of Wine (Mid-Range)</td>\n      <td>5.87</td>\n      <td>7.64</td>\n      <td>6.11</td>\n      <td>12.00</td>\n      <td>3.61</td>\n      <td>7.00</td>\n      <td>10.72</td>\n      <td>4.34</td>\n      <td>4.75</td>\n      <td>...</td>\n      <td>4.03</td>\n      <td>5.87</td>\n      <td>7.65</td>\n      <td>7.00</td>\n      <td>10.37</td>\n      <td>9.29</td>\n      <td>9.32</td>\n      <td>11.19</td>\n      <td>7.03</td>\n      <td>11.68</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Domestic Beer (0.5 liter bottle)</td>\n      <td>0.88</td>\n      <td>1.79</td>\n      <td>1.63</td>\n      <td>2.23</td>\n      <td>0.77</td>\n      <td>1.20</td>\n      <td>1.40</td>\n      <td>0.50</td>\n      <td>0.76</td>\n      <td>...</td>\n      <td>0.62</td>\n      <td>0.90</td>\n      <td>1.64</td>\n      <td>1.24</td>\n      <td>2.02</td>\n      <td>3.13</td>\n      <td>2.99</td>\n      <td>3.42</td>\n      <td>1.31</td>\n      <td>1.26</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Imported Beer (0.33 liter bottle)</td>\n      <td>1.89</td>\n      <td>2.48</td>\n      <td>2.09</td>\n      <td>2.95</td>\n      <td>1.38</td>\n      <td>2.01</td>\n      <td>2.06</td>\n      <td>0.86</td>\n      <td>1.94</td>\n      <td>...</td>\n      <td>1.32</td>\n      <td>1.50</td>\n      <td>2.14</td>\n      <td>1.87</td>\n      <td>3.04</td>\n      <td>3.37</td>\n      <td>3.96</td>\n      <td>3.73</td>\n      <td>1.97</td>\n      <td>2.55</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Cigarettes 20 Pack (Marlboro)</td>\n      <td>2.20</td>\n      <td>2.75</td>\n      <td>2.29</td>\n      <td>7.70</td>\n      <td>1.56</td>\n      <td>5.50</td>\n      <td>2.26</td>\n      <td>2.81</td>\n      <td>2.11</td>\n      <td>...</td>\n      <td>1.54</td>\n      <td>1.91</td>\n      <td>2.29</td>\n      <td>6.70</td>\n      <td>9.08</td>\n      <td>19.01</td>\n      <td>18.64</td>\n      <td>20.82</td>\n      <td>2.25</td>\n      <td>4.49</td>\n    </tr>\n    <tr>\n      <th>16</th>\n      <td>One-way Ticket (Local Transport)</td>\n      <td>0.59</td>\n      <td>0.41</td>\n      <td>0.46</td>\n      <td>2.80</td>\n      <td>0.10</td>\n      <td>2.00</td>\n      <td>0.28</td>\n      <td>0.92</td>\n      <td>0.16</td>\n      <td>...</td>\n      <td>0.26</td>\n      <td>0.32</td>\n      <td>0.51</td>\n      <td>2.10</td>\n      <td>1.53</td>\n      <td>2.72</td>\n      <td>2.58</td>\n      <td>2.73</td>\n      <td>0.23</td>\n      <td>0.22</td>\n    </tr>\n    <tr>\n      <th>17</th>\n      <td>Chicken Breasts (Boneless, Skinless), (1kg)</td>\n      <td>3.96</td>\n      <td>3.50</td>\n      <td>3.05</td>\n      <td>9.42</td>\n      <td>3.55</td>\n      <td>8.83</td>\n      <td>4.18</td>\n      <td>3.97</td>\n      <td>2.92</td>\n      <td>...</td>\n      <td>3.60</td>\n      <td>3.88</td>\n      <td>3.15</td>\n      <td>9.07</td>\n      <td>8.33</td>\n      <td>6.64</td>\n      <td>6.90</td>\n      <td>7.15</td>\n      <td>4.07</td>\n      <td>6.01</td>\n    </tr>\n    <tr>\n      <th>18</th>\n      <td>Monthly Pass (Regular Price)</td>\n      <td>42.56</td>\n      <td>31.32</td>\n      <td>22.92</td>\n      <td>59.70</td>\n      <td>9.33</td>\n      <td>39.00</td>\n      <td>11.28</td>\n      <td>22.48</td>\n      <td>9.63</td>\n      <td>...</td>\n      <td>5.63</td>\n      <td>11.01</td>\n      <td>22.95</td>\n      <td>49.00</td>\n      <td>55.23</td>\n      <td>95.36</td>\n      <td>84.02</td>\n      <td>130.49</td>\n      <td>8.44</td>\n      <td>23.81</td>\n    </tr>\n    <tr>\n      <th>19</th>\n      <td>Gasoline (1 liter)</td>\n      <td>0.67</td>\n      <td>1.05</td>\n      <td>1.04</td>\n      <td>1.54</td>\n      <td>0.98</td>\n      <td>1.59</td>\n      <td>0.45</td>\n      <td>1.17</td>\n      <td>0.49</td>\n      <td>...</td>\n      <td>1.14</td>\n      <td>0.64</td>\n      <td>1.05</td>\n      <td>1.44</td>\n      <td>1.67</td>\n      <td>0.91</td>\n      <td>0.87</td>\n      <td>0.93</td>\n      <td>0.39</td>\n      <td>0.54</td>\n    </tr>\n    <tr>\n      <th>20</th>\n      <td>Volkswagen Golf</td>\n      <td>19289.39</td>\n      <td>24443.15</td>\n      <td>24443.15</td>\n      <td>22000.00</td>\n      <td>16335.12</td>\n      <td>22400.00</td>\n      <td>25098.60</td>\n      <td>16859.68</td>\n      <td>15558.40</td>\n      <td>...</td>\n      <td>20706.61</td>\n      <td>18196.16</td>\n      <td>22948.67</td>\n      <td>20200.00</td>\n      <td>34229.98</td>\n      <td>15479.87</td>\n      <td>16149.98</td>\n      <td>15845.50</td>\n      <td>23626.73</td>\n      <td>21563.64</td>\n    </tr>\n    <tr>\n      <th>21</th>\n      <td>Apartment (1 bedroom) in City Centre</td>\n      <td>524.45</td>\n      <td>291.55</td>\n      <td>212.22</td>\n      <td>986.93</td>\n      <td>244.49</td>\n      <td>1099.67</td>\n      <td>188.00</td>\n      <td>219.72</td>\n      <td>290.07</td>\n      <td>...</td>\n      <td>364.65</td>\n      <td>344.85</td>\n      <td>177.53</td>\n      <td>838.20</td>\n      <td>919.40</td>\n      <td>1134.86</td>\n      <td>897.50</td>\n      <td>1568.39</td>\n      <td>142.04</td>\n      <td>369.07</td>\n    </tr>\n    <tr>\n      <th>22</th>\n      <td>Apartment (1 bedroom) Outside of Centre</td>\n      <td>344.27</td>\n      <td>177.72</td>\n      <td>128.36</td>\n      <td>758.13</td>\n      <td>177.96</td>\n      <td>731.69</td>\n      <td>109.76</td>\n      <td>159.73</td>\n      <td>157.97</td>\n      <td>...</td>\n      <td>249.90</td>\n      <td>225.13</td>\n      <td>121.74</td>\n      <td>686.19</td>\n      <td>740.05</td>\n      <td>859.46</td>\n      <td>639.56</td>\n      <td>1140.67</td>\n      <td>84.65</td>\n      <td>221.89</td>\n    </tr>\n    <tr>\n      <th>23</th>\n      <td>Apartment (3 bedrooms) in City Centre</td>\n      <td>1012.53</td>\n      <td>545.50</td>\n      <td>353.76</td>\n      <td>1819.32</td>\n      <td>428.67</td>\n      <td>2311.84</td>\n      <td>352.74</td>\n      <td>398.18</td>\n      <td>608.91</td>\n      <td>...</td>\n      <td>589.43</td>\n      <td>635.89</td>\n      <td>315.38</td>\n      <td>1432.14</td>\n      <td>1577.52</td>\n      <td>2027.71</td>\n      <td>1474.61</td>\n      <td>2674.32</td>\n      <td>285.82</td>\n      <td>680.28</td>\n    </tr>\n    <tr>\n      <th>24</th>\n      <td>Apartment (3 bedrooms) Outside of Centre</td>\n      <td>615.19</td>\n      <td>314.98</td>\n      <td>225.34</td>\n      <td>1271.16</td>\n      <td>330.84</td>\n      <td>1428.30</td>\n      <td>229.29</td>\n      <td>259.32</td>\n      <td>299.45</td>\n      <td>...</td>\n      <td>414.33</td>\n      <td>406.41</td>\n      <td>203.48</td>\n      <td>1116.71</td>\n      <td>1213.39</td>\n      <td>1341.31</td>\n      <td>982.76</td>\n      <td>1810.32</td>\n      <td>169.03</td>\n      <td>447.51</td>\n    </tr>\n    <tr>\n      <th>25</th>\n      <td>Basic (Electricity, Heating, Cooling, Water, G...</td>\n      <td>102.17</td>\n      <td>59.33</td>\n      <td>51.07</td>\n      <td>82.66</td>\n      <td>113.46</td>\n      <td>163.97</td>\n      <td>25.79</td>\n      <td>141.04</td>\n      <td>42.65</td>\n      <td>...</td>\n      <td>88.45</td>\n      <td>94.51</td>\n      <td>67.46</td>\n      <td>122.98</td>\n      <td>166.88</td>\n      <td>127.87</td>\n      <td>129.02</td>\n      <td>110.70</td>\n      <td>18.56</td>\n      <td>39.64</td>\n    </tr>\n    <tr>\n      <th>26</th>\n      <td>1 min. of Prepaid Mobile Tariff Local (No Disc...</td>\n      <td>0.03</td>\n      <td>0.11</td>\n      <td>0.09</td>\n      <td>0.07</td>\n      <td>0.07</td>\n      <td>0.18</td>\n      <td>0.01</td>\n      <td>0.10</td>\n      <td>0.03</td>\n      <td>...</td>\n      <td>0.03</td>\n      <td>0.03</td>\n      <td>0.12</td>\n      <td>0.23</td>\n      <td>0.13</td>\n      <td>0.12</td>\n      <td>0.32</td>\n      <td>0.38</td>\n      <td>0.01</td>\n      <td>0.11</td>\n    </tr>\n    <tr>\n      <th>27</th>\n      <td>Internet (60 Mbps or More, Unlimited Data, Cab...</td>\n      <td>6.96</td>\n      <td>14.20</td>\n      <td>12.89</td>\n      <td>22.31</td>\n      <td>8.58</td>\n      <td>28.93</td>\n      <td>14.77</td>\n      <td>21.34</td>\n      <td>15.51</td>\n      <td>...</td>\n      <td>4.44</td>\n      <td>7.96</td>\n      <td>12.93</td>\n      <td>43.43</td>\n      <td>24.16</td>\n      <td>43.28</td>\n      <td>43.78</td>\n      <td>43.51</td>\n      <td>16.57</td>\n      <td>36.77</td>\n    </tr>\n    <tr>\n      <th>28</th>\n      <td>Fitness Club, Monthly Fee for 1 Adult</td>\n      <td>26.27</td>\n      <td>25.10</td>\n      <td>20.64</td>\n      <td>34.54</td>\n      <td>26.64</td>\n      <td>66.62</td>\n      <td>26.19</td>\n      <td>20.70</td>\n      <td>30.43</td>\n      <td>...</td>\n      <td>17.16</td>\n      <td>27.49</td>\n      <td>23.40</td>\n      <td>26.11</td>\n      <td>71.27</td>\n      <td>46.28</td>\n      <td>39.32</td>\n      <td>47.37</td>\n      <td>19.58</td>\n      <td>40.91</td>\n    </tr>\n    <tr>\n      <th>29</th>\n      <td>Tennis Court Rent (1 Hour on Weekend)</td>\n      <td>18.33</td>\n      <td>15.66</td>\n      <td>11.67</td>\n      <td>24.72</td>\n      <td>12.10</td>\n      <td>22.96</td>\n      <td>7.07</td>\n      <td>9.38</td>\n      <td>16.73</td>\n      <td>...</td>\n      <td>8.84</td>\n      <td>17.31</td>\n      <td>8.21</td>\n      <td>16.94</td>\n      <td>16.60</td>\n      <td>14.14</td>\n      <td>11.99</td>\n      <td>13.50</td>\n      <td>7.52</td>\n      <td>16.73</td>\n    </tr>\n    <tr>\n      <th>30</th>\n      <td>Cinema, International Release, 1 Seat</td>\n      <td>5.14</td>\n      <td>3.82</td>\n      <td>3.06</td>\n      <td>14.00</td>\n      <td>5.19</td>\n      <td>10.00</td>\n      <td>4.51</td>\n      <td>2.55</td>\n      <td>3.69</td>\n      <td>...</td>\n      <td>3.75</td>\n      <td>4.40</td>\n      <td>3.06</td>\n      <td>11.00</td>\n      <td>10.37</td>\n      <td>12.38</td>\n      <td>11.19</td>\n      <td>12.43</td>\n      <td>3.66</td>\n      <td>5.39</td>\n    </tr>\n    <tr>\n      <th>31</th>\n      <td>1 Pair of Jeans (Levis 501 Or Similar)</td>\n      <td>71.86</td>\n      <td>36.15</td>\n      <td>33.20</td>\n      <td>83.41</td>\n      <td>56.54</td>\n      <td>86.65</td>\n      <td>42.38</td>\n      <td>63.44</td>\n      <td>43.59</td>\n      <td>...</td>\n      <td>59.94</td>\n      <td>65.73</td>\n      <td>29.38</td>\n      <td>72.59</td>\n      <td>81.25</td>\n      <td>61.86</td>\n      <td>57.64</td>\n      <td>61.22</td>\n      <td>32.34</td>\n      <td>56.57</td>\n    </tr>\n    <tr>\n      <th>32</th>\n      <td>1 Summer Dress in a Chain Store (Zara, H&amp;M, ...)</td>\n      <td>38.25</td>\n      <td>25.91</td>\n      <td>22.48</td>\n      <td>31.41</td>\n      <td>35.37</td>\n      <td>32.80</td>\n      <td>44.32</td>\n      <td>26.64</td>\n      <td>40.16</td>\n      <td>...</td>\n      <td>40.06</td>\n      <td>43.52</td>\n      <td>17.75</td>\n      <td>33.81</td>\n      <td>56.11</td>\n      <td>36.07</td>\n      <td>32.49</td>\n      <td>38.11</td>\n      <td>40.48</td>\n      <td>41.74</td>\n    </tr>\n    <tr>\n      <th>33</th>\n      <td>1 Pair of Nike Running Shoes (Mid-Range)</td>\n      <td>74.88</td>\n      <td>61.31</td>\n      <td>52.74</td>\n      <td>82.49</td>\n      <td>86.25</td>\n      <td>86.32</td>\n      <td>114.98</td>\n      <td>73.77</td>\n      <td>93.36</td>\n      <td>...</td>\n      <td>85.50</td>\n      <td>82.60</td>\n      <td>57.01</td>\n      <td>78.65</td>\n      <td>104.25</td>\n      <td>75.79</td>\n      <td>76.64</td>\n      <td>86.50</td>\n      <td>114.49</td>\n      <td>88.39</td>\n    </tr>\n    <tr>\n      <th>34</th>\n      <td>1 Pair of Men Leather Business Shoes</td>\n      <td>100.72</td>\n      <td>50.58</td>\n      <td>42.20</td>\n      <td>120.97</td>\n      <td>94.38</td>\n      <td>135.80</td>\n      <td>56.92</td>\n      <td>74.25</td>\n      <td>76.12</td>\n      <td>...</td>\n      <td>97.41</td>\n      <td>82.09</td>\n      <td>46.84</td>\n      <td>116.11</td>\n      <td>110.38</td>\n      <td>84.07</td>\n      <td>86.35</td>\n      <td>94.94</td>\n      <td>49.58</td>\n      <td>84.05</td>\n    </tr>\n    <tr>\n      <th>35</th>\n      <td>Price per Square Meter to Buy Apartment in Cit...</td>\n      <td>2476.05</td>\n      <td>1315.18</td>\n      <td>856.54</td>\n      <td>7444.54</td>\n      <td>904.82</td>\n      <td>8221.95</td>\n      <td>695.67</td>\n      <td>1328.34</td>\n      <td>1307.40</td>\n      <td>...</td>\n      <td>1182.64</td>\n      <td>1273.80</td>\n      <td>573.51</td>\n      <td>3232.14</td>\n      <td>7929.81</td>\n      <td>5967.57</td>\n      <td>4005.94</td>\n      <td>8435.22</td>\n      <td>672.49</td>\n      <td>1388.16</td>\n    </tr>\n    <tr>\n      <th>36</th>\n      <td>Price per Square Meter to Buy Apartment Outsid...</td>\n      <td>1507.70</td>\n      <td>657.05</td>\n      <td>508.14</td>\n      <td>4099.36</td>\n      <td>589.13</td>\n      <td>3719.51</td>\n      <td>407.03</td>\n      <td>1008.17</td>\n      <td>647.53</td>\n      <td>...</td>\n      <td>609.22</td>\n      <td>788.31</td>\n      <td>385.98</td>\n      <td>2538.10</td>\n      <td>4754.16</td>\n      <td>4802.08</td>\n      <td>2866.79</td>\n      <td>5375.57</td>\n      <td>291.12</td>\n      <td>947.32</td>\n    </tr>\n    <tr>\n      <th>37</th>\n      <td>Average Monthly Net Salary (After Tax)</td>\n      <td>645.94</td>\n      <td>436.00</td>\n      <td>392.07</td>\n      <td>2382.56</td>\n      <td>286.95</td>\n      <td>1601.00</td>\n      <td>221.70</td>\n      <td>430.69</td>\n      <td>294.03</td>\n      <td>...</td>\n      <td>341.38</td>\n      <td>436.28</td>\n      <td>443.85</td>\n      <td>2289.69</td>\n      <td>1911.12</td>\n      <td>2791.96</td>\n      <td>2493.77</td>\n      <td>3018.36</td>\n      <td>163.94</td>\n      <td>527.18</td>\n    </tr>\n    <tr>\n      <th>38</th>\n      <td>Mortgage Interest Rate in Percentages (%), Yea...</td>\n      <td>10.29</td>\n      <td>19.08</td>\n      <td>22.23</td>\n      <td>1.38</td>\n      <td>9.42</td>\n      <td>1.95</td>\n      <td>13.42</td>\n      <td>4.46</td>\n      <td>8.21</td>\n      <td>...</td>\n      <td>18.96</td>\n      <td>10.79</td>\n      <td>19.05</td>\n      <td>1.68</td>\n      <td>3.75</td>\n      <td>4.11</td>\n      <td>4.31</td>\n      <td>3.82</td>\n      <td>16.17</td>\n      <td>10.71</td>\n    </tr>\n    <tr>\n      <th>39</th>\n      <td>Taxi Start (Normal Tariff)</td>\n      <td>1.47</td>\n      <td>0.76</td>\n      <td>0.61</td>\n      <td>6.00</td>\n      <td>1.30</td>\n      <td>5.00</td>\n      <td>0.39</td>\n      <td>1.02</td>\n      <td>0.84</td>\n      <td>...</td>\n      <td>1.88</td>\n      <td>1.58</td>\n      <td>0.64</td>\n      <td>3.00</td>\n      <td>3.11</td>\n      <td>3.10</td>\n      <td>3.11</td>\n      <td>2.49</td>\n      <td>0.34</td>\n      <td>1.35</td>\n    </tr>\n    <tr>\n      <th>40</th>\n      <td>Taxi 1km (Normal Tariff)</td>\n      <td>0.26</td>\n      <td>0.47</td>\n      <td>0.57</td>\n      <td>1.00</td>\n      <td>0.18</td>\n      <td>1.12</td>\n      <td>0.17</td>\n      <td>0.77</td>\n      <td>0.32</td>\n      <td>...</td>\n      <td>0.26</td>\n      <td>0.15</td>\n      <td>0.50</td>\n      <td>1.95</td>\n      <td>0.95</td>\n      <td>1.11</td>\n      <td>1.07</td>\n      <td>1.37</td>\n      <td>0.14</td>\n      <td>1.35</td>\n    </tr>\n    <tr>\n      <th>41</th>\n      <td>Taxi 1hour Waiting (Normal Tariff)</td>\n      <td>4.40</td>\n      <td>3.59</td>\n      <td>3.51</td>\n      <td>47.04</td>\n      <td>3.11</td>\n      <td>28.32</td>\n      <td>1.13</td>\n      <td>7.66</td>\n      <td>1.58</td>\n      <td>...</td>\n      <td>3.00</td>\n      <td>4.40</td>\n      <td>2.75</td>\n      <td>30.00</td>\n      <td>21.24</td>\n      <td>21.18</td>\n      <td>30.45</td>\n      <td>35.05</td>\n      <td>2.25</td>\n      <td>8.98</td>\n    </tr>\n    <tr>\n      <th>42</th>\n      <td>Apples (1kg)</td>\n      <td>1.29</td>\n      <td>0.85</td>\n      <td>0.77</td>\n      <td>2.10</td>\n      <td>0.70</td>\n      <td>2.13</td>\n      <td>1.31</td>\n      <td>0.86</td>\n      <td>0.69</td>\n      <td>...</td>\n      <td>0.76</td>\n      <td>1.48</td>\n      <td>0.81</td>\n      <td>2.17</td>\n      <td>2.76</td>\n      <td>2.56</td>\n      <td>2.41</td>\n      <td>2.77</td>\n      <td>1.48</td>\n      <td>2.07</td>\n    </tr>\n    <tr>\n      <th>43</th>\n      <td>Oranges (1kg)</td>\n      <td>1.25</td>\n      <td>0.86</td>\n      <td>0.73</td>\n      <td>1.75</td>\n      <td>1.22</td>\n      <td>2.05</td>\n      <td>0.39</td>\n      <td>1.18</td>\n      <td>1.26</td>\n      <td>...</td>\n      <td>1.33</td>\n      <td>1.26</td>\n      <td>0.81</td>\n      <td>2.24</td>\n      <td>1.35</td>\n      <td>2.15</td>\n      <td>2.15</td>\n      <td>2.38</td>\n      <td>0.40</td>\n      <td>1.32</td>\n    </tr>\n    <tr>\n      <th>44</th>\n      <td>Potato (1kg)</td>\n      <td>0.56</td>\n      <td>0.59</td>\n      <td>0.52</td>\n      <td>0.91</td>\n      <td>0.56</td>\n      <td>1.28</td>\n      <td>0.47</td>\n      <td>0.55</td>\n      <td>0.46</td>\n      <td>...</td>\n      <td>0.38</td>\n      <td>0.37</td>\n      <td>0.50</td>\n      <td>1.50</td>\n      <td>0.89</td>\n      <td>2.24</td>\n      <td>1.54</td>\n      <td>2.08</td>\n      <td>0.37</td>\n      <td>1.02</td>\n    </tr>\n    <tr>\n      <th>45</th>\n      <td>Lettuce (1 head)</td>\n      <td>0.86</td>\n      <td>0.61</td>\n      <td>0.57</td>\n      <td>2.30</td>\n      <td>0.84</td>\n      <td>1.27</td>\n      <td>0.28</td>\n      <td>0.55</td>\n      <td>0.42</td>\n      <td>...</td>\n      <td>0.62</td>\n      <td>0.63</td>\n      <td>0.53</td>\n      <td>1.29</td>\n      <td>1.19</td>\n      <td>1.57</td>\n      <td>1.26</td>\n      <td>1.59</td>\n      <td>0.20</td>\n      <td>0.58</td>\n    </tr>\n    <tr>\n      <th>46</th>\n      <td>Cappuccino (regular)</td>\n      <td>1.96</td>\n      <td>1.84</td>\n      <td>1.56</td>\n      <td>3.87</td>\n      <td>1.25</td>\n      <td>1.46</td>\n      <td>1.65</td>\n      <td>0.85</td>\n      <td>2.15</td>\n      <td>...</td>\n      <td>1.15</td>\n      <td>1.88</td>\n      <td>1.59</td>\n      <td>3.17</td>\n      <td>2.80</td>\n      <td>2.63</td>\n      <td>2.86</td>\n      <td>2.48</td>\n      <td>1.45</td>\n      <td>1.81</td>\n    </tr>\n    <tr>\n      <th>47</th>\n      <td>Rice (white), (1kg)</td>\n      <td>0.92</td>\n      <td>1.30</td>\n      <td>1.31</td>\n      <td>2.13</td>\n      <td>0.93</td>\n      <td>2.25</td>\n      <td>0.65</td>\n      <td>1.05</td>\n      <td>1.05</td>\n      <td>...</td>\n      <td>1.02</td>\n      <td>0.95</td>\n      <td>1.40</td>\n      <td>2.19</td>\n      <td>2.06</td>\n      <td>1.58</td>\n      <td>1.96</td>\n      <td>1.65</td>\n      <td>0.66</td>\n      <td>1.34</td>\n    </tr>\n    <tr>\n      <th>48</th>\n      <td>Tomato (1kg)</td>\n      <td>1.91</td>\n      <td>0.80</td>\n      <td>0.70</td>\n      <td>2.91</td>\n      <td>1.56</td>\n      <td>2.45</td>\n      <td>0.35</td>\n      <td>0.94</td>\n      <td>0.83</td>\n      <td>...</td>\n      <td>1.34</td>\n      <td>1.80</td>\n      <td>0.79</td>\n      <td>2.07</td>\n      <td>1.31</td>\n      <td>3.06</td>\n      <td>2.40</td>\n      <td>3.01</td>\n      <td>0.39</td>\n      <td>1.06</td>\n    </tr>\n    <tr>\n      <th>49</th>\n      <td>Banana (1kg)</td>\n      <td>0.89</td>\n      <td>1.91</td>\n      <td>1.78</td>\n      <td>1.61</td>\n      <td>1.37</td>\n      <td>1.99</td>\n      <td>0.66</td>\n      <td>1.06</td>\n      <td>1.22</td>\n      <td>...</td>\n      <td>1.13</td>\n      <td>1.10</td>\n      <td>1.73</td>\n      <td>1.63</td>\n      <td>1.78</td>\n      <td>2.20</td>\n      <td>2.11</td>\n      <td>2.17</td>\n      <td>0.66</td>\n      <td>0.99</td>\n    </tr>\n    <tr>\n      <th>50</th>\n      <td>Onion (1kg)</td>\n      <td>0.48</td>\n      <td>0.62</td>\n      <td>0.58</td>\n      <td>1.25</td>\n      <td>0.59</td>\n      <td>1.27</td>\n      <td>0.34</td>\n      <td>0.64</td>\n      <td>0.39</td>\n      <td>...</td>\n      <td>0.41</td>\n      <td>0.36</td>\n      <td>0.55</td>\n      <td>1.30</td>\n      <td>0.94</td>\n      <td>1.78</td>\n      <td>1.29</td>\n      <td>1.72</td>\n      <td>0.31</td>\n      <td>0.94</td>\n    </tr>\n    <tr>\n      <th>51</th>\n      <td>Beef Round (1kg) (or Equivalent Back Leg Red M...</td>\n      <td>7.18</td>\n      <td>9.73</td>\n      <td>8.61</td>\n      <td>12.34</td>\n      <td>5.37</td>\n      <td>17.75</td>\n      <td>8.06</td>\n      <td>7.43</td>\n      <td>6.15</td>\n      <td>...</td>\n      <td>5.65</td>\n      <td>7.20</td>\n      <td>10.08</td>\n      <td>13.56</td>\n      <td>13.52</td>\n      <td>9.42</td>\n      <td>9.49</td>\n      <td>11.24</td>\n      <td>8.37</td>\n      <td>6.46</td>\n    </tr>\n    <tr>\n      <th>52</th>\n      <td>Toyota Corolla 1.6l 97kW Comfort (Or Equivalen...</td>\n      <td>19305.29</td>\n      <td>20874.72</td>\n      <td>20898.83</td>\n      <td>24402.77</td>\n      <td>17238.13</td>\n      <td>23233.33</td>\n      <td>21020.29</td>\n      <td>16529.98</td>\n      <td>18564.59</td>\n      <td>...</td>\n      <td>20334.03</td>\n      <td>18129.31</td>\n      <td>20892.07</td>\n      <td>21788.33</td>\n      <td>34921.49</td>\n      <td>15221.84</td>\n      <td>15239.20</td>\n      <td>15066.62</td>\n      <td>23071.86</td>\n      <td>25324.92</td>\n    </tr>\n    <tr>\n      <th>53</th>\n      <td>Preschool (or Kindergarten), Full Day, Private...</td>\n      <td>411.83</td>\n      <td>282.94</td>\n      <td>212.18</td>\n      <td>351.60</td>\n      <td>210.52</td>\n      <td>617.27</td>\n      <td>121.15</td>\n      <td>128.70</td>\n      <td>208.84</td>\n      <td>...</td>\n      <td>192.51</td>\n      <td>222.83</td>\n      <td>200.51</td>\n      <td>695.44</td>\n      <td>566.18</td>\n      <td>1250.41</td>\n      <td>1190.12</td>\n      <td>1389.43</td>\n      <td>55.41</td>\n      <td>276.63</td>\n    </tr>\n    <tr>\n      <th>54</th>\n      <td>International Primary School, Yearly for 1 Child</td>\n      <td>5388.86</td>\n      <td>6905.43</td>\n      <td>4948.41</td>\n      <td>1641.00</td>\n      <td>2679.30</td>\n      <td>10761.90</td>\n      <td>2781.29</td>\n      <td>1348.77</td>\n      <td>5657.01</td>\n      <td>...</td>\n      <td>2729.00</td>\n      <td>2474.58</td>\n      <td>4036.19</td>\n      <td>18342.86</td>\n      <td>4019.43</td>\n      <td>12874.09</td>\n      <td>11526.08</td>\n      <td>11933.55</td>\n      <td>2132.54</td>\n      <td>6410.05</td>\n    </tr>\n  </tbody>\n</table>\n<p>55 rows × 161 columns</p>\n</div>","text/plain":"                                           Unnamed: 0  \\\n0                        Meal, Inexpensive Restaurant   \n1   Meal for 2 People, Mid-range Restaurant, Three...   \n2      McMeal at McDonalds (or Equivalent Combo Meal)   \n3                   Domestic Beer (0.5 liter draught)   \n4                   Imported Beer (0.33 liter bottle)   \n5                      Coke/Pepsi (0.33 liter bottle)   \n6                          Water (0.33 liter bottle)    \n7                           Milk (regular), (1 liter)   \n8                    Loaf of Fresh White Bread (500g)   \n9                                 Eggs (regular) (12)   \n10                                 Local Cheese (1kg)   \n11                           Water (1.5 liter bottle)   \n12                         Bottle of Wine (Mid-Range)   \n13                   Domestic Beer (0.5 liter bottle)   \n14                  Imported Beer (0.33 liter bottle)   \n15                      Cigarettes 20 Pack (Marlboro)   \n16                   One-way Ticket (Local Transport)   \n17        Chicken Breasts (Boneless, Skinless), (1kg)   \n18                       Monthly Pass (Regular Price)   \n19                                 Gasoline (1 liter)   \n20                                    Volkswagen Golf   \n21               Apartment (1 bedroom) in City Centre   \n22            Apartment (1 bedroom) Outside of Centre   \n23              Apartment (3 bedrooms) in City Centre   \n24           Apartment (3 bedrooms) Outside of Centre   \n25  Basic (Electricity, Heating, Cooling, Water, G...   \n26  1 min. of Prepaid Mobile Tariff Local (No Disc...   \n27  Internet (60 Mbps or More, Unlimited Data, Cab...   \n28              Fitness Club, Monthly Fee for 1 Adult   \n29              Tennis Court Rent (1 Hour on Weekend)   \n30              Cinema, International Release, 1 Seat   \n31             1 Pair of Jeans (Levis 501 Or Similar)   \n32   1 Summer Dress in a Chain Store (Zara, H&M, ...)   \n33           1 Pair of Nike Running Shoes (Mid-Range)   \n34               1 Pair of Men Leather Business Shoes   \n35  Price per Square Meter to Buy Apartment in Cit...   \n36  Price per Square Meter to Buy Apartment Outsid...   \n37             Average Monthly Net Salary (After Tax)   \n38  Mortgage Interest Rate in Percentages (%), Yea...   \n39                         Taxi Start (Normal Tariff)   \n40                           Taxi 1km (Normal Tariff)   \n41                 Taxi 1hour Waiting (Normal Tariff)   \n42                                       Apples (1kg)   \n43                                      Oranges (1kg)   \n44                                       Potato (1kg)   \n45                                   Lettuce (1 head)   \n46                               Cappuccino (regular)   \n47                                Rice (white), (1kg)   \n48                                       Tomato (1kg)   \n49                                       Banana (1kg)   \n50                                        Onion (1kg)   \n51  Beef Round (1kg) (or Equivalent Back Leg Red M...   \n52  Toyota Corolla 1.6l 97kW Comfort (Or Equivalen...   \n53  Preschool (or Kindergarten), Full Day, Private...   \n54   International Primary School, Yearly for 1 Child   \n\n    Saint Petersburg, Russia  Istanbul, Turkey  Izmir, Turkey  \\\n0                       7.34              4.58           3.06   \n1                      29.35             15.28          12.22   \n2                       4.40              3.82           3.06   \n3                       2.20              3.06           2.29   \n4                       2.20              3.06           2.75   \n5                       0.76              0.64           0.61   \n6                       0.53              0.24           0.22   \n7                       0.98              0.71           0.65   \n8                       0.71              0.36           0.38   \n9                       1.18              1.62           1.51   \n10                      7.60              5.32           4.97   \n11                      0.63              0.33           0.29   \n12                      5.87              7.64           6.11   \n13                      0.88              1.79           1.63   \n14                      1.89              2.48           2.09   \n15                      2.20              2.75           2.29   \n16                      0.59              0.41           0.46   \n17                      3.96              3.50           3.05   \n18                     42.56             31.32          22.92   \n19                      0.67              1.05           1.04   \n20                  19289.39          24443.15       24443.15   \n21                    524.45            291.55         212.22   \n22                    344.27            177.72         128.36   \n23                   1012.53            545.50         353.76   \n24                    615.19            314.98         225.34   \n25                    102.17             59.33          51.07   \n26                      0.03              0.11           0.09   \n27                      6.96             14.20          12.89   \n28                     26.27             25.10          20.64   \n29                     18.33             15.66          11.67   \n30                      5.14              3.82           3.06   \n31                     71.86             36.15          33.20   \n32                     38.25             25.91          22.48   \n33                     74.88             61.31          52.74   \n34                    100.72             50.58          42.20   \n35                   2476.05           1315.18         856.54   \n36                   1507.70            657.05         508.14   \n37                    645.94            436.00         392.07   \n38                     10.29             19.08          22.23   \n39                      1.47              0.76           0.61   \n40                      0.26              0.47           0.57   \n41                      4.40              3.59           3.51   \n42                      1.29              0.85           0.77   \n43                      1.25              0.86           0.73   \n44                      0.56              0.59           0.52   \n45                      0.86              0.61           0.57   \n46                      1.96              1.84           1.56   \n47                      0.92              1.30           1.31   \n48                      1.91              0.80           0.70   \n49                      0.89              1.91           1.78   \n50                      0.48              0.62           0.58   \n51                      7.18              9.73           8.61   \n52                  19305.29          20874.72       20898.83   \n53                    411.83            282.94         212.18   \n54                   5388.86           6905.43        4948.41   \n\n    Helsinki, Finland  Chisinau, Moldova  Milan, Italy  Cairo, Egypt  \\\n0               12.00               4.67         15.00          3.38   \n1               65.00              20.74         60.00         17.48   \n2                8.00               4.15          8.00          4.51   \n3                6.50               1.04          5.00          1.69   \n4                6.75               1.43          5.00          2.82   \n5                2.66               0.64          2.49          0.29   \n6                1.89               0.44          1.12          0.18   \n7                0.96               0.68          1.21          0.84   \n8                2.27               0.33          1.94          0.51   \n9                2.02               1.11          2.87          1.04   \n10               6.87               5.79         13.54          3.16   \n11               1.54               0.59          0.40          0.29   \n12              12.00               3.61          7.00         10.72   \n13               2.23               0.77          1.20          1.40   \n14               2.95               1.38          2.01          2.06   \n15               7.70               1.56          5.50          2.26   \n16               2.80               0.10          2.00          0.28   \n17               9.42               3.55          8.83          4.18   \n18              59.70               9.33         39.00         11.28   \n19               1.54               0.98          1.59          0.45   \n20           22000.00           16335.12      22400.00      25098.60   \n21             986.93             244.49       1099.67        188.00   \n22             758.13             177.96        731.69        109.76   \n23            1819.32             428.67       2311.84        352.74   \n24            1271.16             330.84       1428.30        229.29   \n25              82.66             113.46        163.97         25.79   \n26               0.07               0.07          0.18          0.01   \n27              22.31               8.58         28.93         14.77   \n28              34.54              26.64         66.62         26.19   \n29              24.72              12.10         22.96          7.07   \n30              14.00               5.19         10.00          4.51   \n31              83.41              56.54         86.65         42.38   \n32              31.41              35.37         32.80         44.32   \n33              82.49              86.25         86.32        114.98   \n34             120.97              94.38        135.80         56.92   \n35            7444.54             904.82       8221.95        695.67   \n36            4099.36             589.13       3719.51        407.03   \n37            2382.56             286.95       1601.00        221.70   \n38               1.38               9.42          1.95         13.42   \n39               6.00               1.30          5.00          0.39   \n40               1.00               0.18          1.12          0.17   \n41              47.04               3.11         28.32          1.13   \n42               2.10               0.70          2.13          1.31   \n43               1.75               1.22          2.05          0.39   \n44               0.91               0.56          1.28          0.47   \n45               2.30               0.84          1.27          0.28   \n46               3.87               1.25          1.46          1.65   \n47               2.13               0.93          2.25          0.65   \n48               2.91               1.56          2.45          0.35   \n49               1.61               1.37          1.99          0.66   \n50               1.25               0.59          1.27          0.34   \n51              12.34               5.37         17.75          8.06   \n52           24402.77           17238.13      23233.33      21020.29   \n53             351.60             210.52        617.27        121.15   \n54            1641.00            2679.30      10761.90       2781.29   \n\n    Banja Luka, Bosnia And Herzegovina  Baku, Azerbaijan  ...  Lviv, Ukraine  \\\n0                                 3.58              5.27  ...           3.75   \n1                                22.99             23.73  ...          18.76   \n2                                 3.58              4.22  ...           3.56   \n3                                 1.02              0.84  ...           1.50   \n4                                 1.53              2.11  ...           1.50   \n5                                 1.18              0.37  ...           0.48   \n6                                 0.74              0.21  ...           0.37   \n7                                 0.69              0.83  ...           0.85   \n8                                 0.63              0.26  ...           0.46   \n9                                 1.47              1.03  ...           1.21   \n10                                4.76              3.54  ...           5.59   \n11                                0.48              0.43  ...           0.46   \n12                                4.34              4.75  ...           4.03   \n13                                0.50              0.76  ...           0.62   \n14                                0.86              1.94  ...           1.32   \n15                                2.81              2.11  ...           1.54   \n16                                0.92              0.16  ...           0.26   \n17                                3.97              2.92  ...           3.60   \n18                               22.48              9.63  ...           5.63   \n19                                1.17              0.49  ...           1.14   \n20                            16859.68          15558.40  ...       20706.61   \n21                              219.72            290.07  ...         364.65   \n22                              159.73            157.97  ...         249.90   \n23                              398.18            608.91  ...         589.43   \n24                              259.32            299.45  ...         414.33   \n25                              141.04             42.65  ...          88.45   \n26                                0.10              0.03  ...           0.03   \n27                               21.34             15.51  ...           4.44   \n28                               20.70             30.43  ...          17.16   \n29                                9.38             16.73  ...           8.84   \n30                                2.55              3.69  ...           3.75   \n31                               63.44             43.59  ...          59.94   \n32                               26.64             40.16  ...          40.06   \n33                               73.77             93.36  ...          85.50   \n34                               74.25             76.12  ...          97.41   \n35                             1328.34           1307.40  ...        1182.64   \n36                             1008.17            647.53  ...         609.22   \n37                              430.69            294.03  ...         341.38   \n38                                4.46              8.21  ...          18.96   \n39                                1.02              0.84  ...           1.88   \n40                                0.77              0.32  ...           0.26   \n41                                7.66              1.58  ...           3.00   \n42                                0.86              0.69  ...           0.76   \n43                                1.18              1.26  ...           1.33   \n44                                0.55              0.46  ...           0.38   \n45                                0.55              0.42  ...           0.62   \n46                                0.85              2.15  ...           1.15   \n47                                1.05              1.05  ...           1.02   \n48                                0.94              0.83  ...           1.34   \n49                                1.06              1.22  ...           1.13   \n50                                0.64              0.39  ...           0.41   \n51                                7.43              6.15  ...           5.65   \n52                            16529.98          18564.59  ...       20334.03   \n53                              128.70            208.84  ...         192.51   \n54                             1348.77           5657.01  ...        2729.00   \n\n    Novosibirsk, Russia  Bursa, Turkey  Brussels, Belgium  Jerusalem, Israel  \\\n0                  5.72           3.82              15.00              15.56   \n1                 22.01          11.47              60.00              62.24   \n2                  3.67           3.06               8.20              12.97   \n3                  1.10           2.37               4.00               7.26   \n4                  2.20           3.06               4.00               7.26   \n5                  0.69           0.70               2.47               2.07   \n6                  0.52           0.23               2.07               1.71   \n7                  0.85           0.69               0.97               1.43   \n8                  0.49           0.42               1.64               1.54   \n9                  1.00           1.63               2.65               3.32   \n10                 7.30           5.93              13.14              10.63   \n11                 0.50           0.29               0.94               1.50   \n12                 5.87           7.65               7.00              10.37   \n13                 0.90           1.64               1.24               2.02   \n14                 1.50           2.14               1.87               3.04   \n15                 1.91           2.29               6.70               9.08   \n16                 0.32           0.51               2.10               1.53   \n17                 3.88           3.15               9.07               8.33   \n18                11.01          22.95              49.00              55.23   \n19                 0.64           1.05               1.44               1.67   \n20             18196.16       22948.67           20200.00           34229.98   \n21               344.85         177.53             838.20             919.40   \n22               225.13         121.74             686.19             740.05   \n23               635.89         315.38            1432.14            1577.52   \n24               406.41         203.48            1116.71            1213.39   \n25                94.51          67.46             122.98             166.88   \n26                 0.03           0.12               0.23               0.13   \n27                 7.96          12.93              43.43              24.16   \n28                27.49          23.40              26.11              71.27   \n29                17.31           8.21              16.94              16.60   \n30                 4.40           3.06              11.00              10.37   \n31                65.73          29.38              72.59              81.25   \n32                43.52          17.75              33.81              56.11   \n33                82.60          57.01              78.65             104.25   \n34                82.09          46.84             116.11             110.38   \n35              1273.80         573.51            3232.14            7929.81   \n36               788.31         385.98            2538.10            4754.16   \n37               436.28         443.85            2289.69            1911.12   \n38                10.79          19.05               1.68               3.75   \n39                 1.58           0.64               3.00               3.11   \n40                 0.15           0.50               1.95               0.95   \n41                 4.40           2.75              30.00              21.24   \n42                 1.48           0.81               2.17               2.76   \n43                 1.26           0.81               2.24               1.35   \n44                 0.37           0.50               1.50               0.89   \n45                 0.63           0.53               1.29               1.19   \n46                 1.88           1.59               3.17               2.80   \n47                 0.95           1.40               2.19               2.06   \n48                 1.80           0.79               2.07               1.31   \n49                 1.10           1.73               1.63               1.78   \n50                 0.36           0.55               1.30               0.94   \n51                 7.20          10.08              13.56              13.52   \n52             18129.31       20892.07           21788.33           34921.49   \n53               222.83         200.51             695.44             566.18   \n54              2474.58        4036.19           18342.86            4019.43   \n\n    Melbourne, Australia  Perth, Australia  Sydney, Australia  \\\n0                  10.22             12.43              11.81   \n1                  49.54             56.55              54.37   \n2                   7.12              7.32               7.15   \n3                   5.57              5.90               4.97   \n4                   5.57              5.59               4.97   \n5                   1.91              1.79               1.99   \n6                   1.70              1.62               1.68   \n7                   0.90              1.03               0.90   \n8                   1.88              1.76               1.85   \n9                   2.85              2.59               2.79   \n10                  6.12              6.52               7.68   \n11                  1.28              1.68               1.29   \n12                  9.29              9.32              11.19   \n13                  3.13              2.99               3.42   \n14                  3.37              3.96               3.73   \n15                 19.01             18.64              20.82   \n16                  2.72              2.58               2.73   \n17                  6.64              6.90               7.15   \n18                 95.36             84.02             130.49   \n19                  0.91              0.87               0.93   \n20              15479.87          16149.98           15845.50   \n21               1134.86            897.50            1568.39   \n22                859.46            639.56            1140.67   \n23               2027.71           1474.61            2674.32   \n24               1341.31            982.76            1810.32   \n25                127.87            129.02             110.70   \n26                  0.12              0.32               0.38   \n27                 43.28             43.78              43.51   \n28                 46.28             39.32              47.37   \n29                 14.14             11.99              13.50   \n30                 12.38             11.19              12.43   \n31                 61.86             57.64              61.22   \n32                 36.07             32.49              38.11   \n33                 75.79             76.64              86.50   \n34                 84.07             86.35              94.94   \n35               5967.57           4005.94            8435.22   \n36               4802.08           2866.79            5375.57   \n37               2791.96           2493.77            3018.36   \n38                  4.11              4.31               3.82   \n39                  3.10              3.11               2.49   \n40                  1.11              1.07               1.37   \n41                 21.18             30.45              35.05   \n42                  2.56              2.41               2.77   \n43                  2.15              2.15               2.38   \n44                  2.24              1.54               2.08   \n45                  1.57              1.26               1.59   \n46                  2.63              2.86               2.48   \n47                  1.58              1.96               1.65   \n48                  3.06              2.40               3.01   \n49                  2.20              2.11               2.17   \n50                  1.78              1.29               1.72   \n51                  9.42              9.49              11.24   \n52              15221.84          15239.20           15066.62   \n53               1250.41           1190.12            1389.43   \n54              12874.09          11526.08           11933.55   \n\n    Alexandria, Egypt  Quito, Ecuador  \n0                2.81            3.59  \n1               14.06           31.45  \n2                3.38            5.39  \n3                1.69            1.35  \n4                2.81            2.70  \n5                0.32            0.71  \n6                0.19            0.47  \n7                0.81            0.87  \n8                0.51            1.35  \n9                1.02            1.59  \n10               3.68            5.47  \n11               0.26            0.93  \n12               7.03           11.68  \n13               1.31            1.26  \n14               1.97            2.55  \n15               2.25            4.49  \n16               0.23            0.22  \n17               4.07            6.01  \n18               8.44           23.81  \n19               0.39            0.54  \n20           23626.73        21563.64  \n21             142.04          369.07  \n22              84.65          221.89  \n23             285.82          680.28  \n24             169.03          447.51  \n25              18.56           39.64  \n26               0.01            0.11  \n27              16.57           36.77  \n28              19.58           40.91  \n29               7.52           16.73  \n30               3.66            5.39  \n31              32.34           56.57  \n32              40.48           41.74  \n33             114.49           88.39  \n34              49.58           84.05  \n35             672.49         1388.16  \n36             291.12          947.32  \n37             163.94          527.18  \n38              16.17           10.71  \n39               0.34            1.35  \n40               0.14            1.35  \n41               2.25            8.98  \n42               1.48            2.07  \n43               0.40            1.32  \n44               0.37            1.02  \n45               0.20            0.58  \n46               1.45            1.81  \n47               0.66            1.34  \n48               0.39            1.06  \n49               0.66            0.99  \n50               0.31            0.94  \n51               8.37            6.46  \n52           23071.86        25324.92  \n53              55.41          276.63  \n54            2132.54         6410.05  \n\n[55 rows x 161 columns]"},"exec_count":8,"output_type":"execute_result"}},"pos":16,"type":"cell"}
{"cell_type":"code","exec_count":9,"id":"5faa6f","input":"#everything below is for costofliving2 in order!","pos":18,"type":"cell"}
{"cell_type":"markdown","id":"e71c29","input":"# Cost of Living\n\n","pos":0,"type":"cell"}
{"id":0,"time":1655403115656,"type":"user"}
{"last_load":1655403114086,"type":"file"}